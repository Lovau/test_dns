{"version":3,"sources":["components/URLList.js","components/Helper.js","components/URL.js","data/Rolex_URL_working_copy.csv","components/FilterableURLList.js","App.js","reportWebVitals.js","index.js"],"names":["URLs","Helper","_randomstring","length","hasCharacters","result","characters","charactersLength","i","charAt","Math","floor","random","getRandomSGTIN","this","_removeDomainProtocol","domain","includes","replace","slice","fetch","require","cnameErrorMessage","serverUnknownMessage","SSLError","RedirectionError","NoRedirectionMessage","API_DNS","API_SSL","API_REDIRECT","API_KEY","URL","props","state","updateInProgress","updateDNSInProgress","updateSSLInProgress","updateRedirWithSGTINInProgress","updateRedirWithoutSGTINInProgress","sgtin","url","update","cname","SSLExpiryDate","redirectWithSGTIN","redirectWithoutSGTIN","updateDNS","updateSSL","updateRedirection","setState","getRedirectionDetails","getSSLDetails","getDNSDetails","getAllURLDetails","a","Promise","resolve","reject","method","headers","then","res","json","body","CNAME","catch","err","console","log","daysRemaining","fullURL","ok","redirect","domainAndCnameData","dnsExist","server","cnameMapping","parentCallback","getSSLExpiryDate","getRedirect","display","tdCnameClass","DNSContent","tdSSLClass","SSLContent","tdRedirectionClass","RedirectionContent","sameRedirectionsWithOrWithoutSGTIN","redirectionsWithSGTINisTheSameAsWithoutSGTIN","site","environment","className","dangerouslySetInnerHTML","__html","React","Component","URLList","domainsToCnames","handleCallback","bind","childData","readCSV","urls","CSV","response","text","Papa","parse","header","skipEmptyLines","data","getURLs","siteFilter","Brand","toLowerCase","environmentFilter","Environment","domainFilter","dns","cnameFilter","Row","Col","sm","listUrls","map","URLisFiltered","trim","messageFilterNeedsToBeActive","FilterableURLList","handleURLsVerifications","handleFilterSiteChange","handleFilterEnvironmentChange","handleFilterDomainChange","handleFilterCnameChange","handleDNSVerifications","handleSSLVerifications","handleRedirection","e","key","preventDefault","target","value","msg","setUpdateToFalse","isFilterActive","Button","variant","onClick","Alert","Table","striped","bordered","hover","responsive","size","Form","Control","type","placeholder","onChange","onKeyPress","handleKeyPress","App","rolexURL","Container","fluid","Navbar","expand","bg","href","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.bb6b0836.chunk.js","sourcesContent":["import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Papa from 'papaparse';\nimport URL from './URL';\n// import CSV from \"../data/urls.csv\";\nimport CSV from \"../data/Rolex_URL_working_copy.csv\";\nimport cnameMapping from \"../data/cname_mapping.json\";\nimport Helper from \"./Helper\";\n\nconst fetch = require('node-fetch');\nvar URLs;\n\nclass URLList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    //  this.state.urls[0] = {'domain': \"https://qru.aptamilessensis.com\", \"update\": false};\n    //  this.state.urls[1] = {'domain': \"https://qr.aptaclub.de\", \"update\": false};\n    //  this.state.urls[2] = {'domain': \"https://qrG.aptaclub.de\", \"update\": false};\n    this.state = {\n     domainsToCnames: {}\n    };\n\n    this.handleCallback = this.handleCallback.bind(this);\n  }\n\n  handleCallback(childData) {\n    var domainsToCnames = { ...this.state.domainsToCnames, ...childData };\n\n    this.setState({\n      domainsToCnames: domainsToCnames\n    });\n  }\n\n  async getURLs() {\n  \t// if (URLs && URLs.length > 0) {\n  \t// \treturn URLs;\n  \t// }\n  \tURLs = await this.readCSV();\n  \tfor (var i = 0; i < URLs.length; i++) {\n  \t\tURLs[i].update = false;\n  \t}\n    this.setState({\n    \turls: URLs\n    });\n  }\n\n  async readCSV() {\n  \treturn fetch(CSV)\n  \t  .then((response) => {\n  \t  \treturn response.text();\n  \t  })\n  \t  .then(text => {\n\t\t  \tvar results = Papa.parse(text, { header: true, skipEmptyLines: true }); // object with { data, errors, meta }\n  \t\t  var rows = results.data; // array of objects\n  \t\t  // console.log(\"Results, rows\", results, rows);\n  \t\t  return rows;\n  \t  });\n  }\n\n  componentDidMount() {\n    this.getURLs();\n  }\n\n  URLisFiltered(domain) {\n    if (this.props.siteFilter.length > 0 && !(domain.Brand.toLowerCase().includes(this.props.siteFilter.toLowerCase()))) {\n      return true;\n    }\n    if (this.props.environmentFilter.length > 0 && !(domain.Environment.toLowerCase().includes(this.props.environmentFilter.toLowerCase()))) {\n      return true;\n    }\n    if (this.props.domainFilter.length > 0 && !(domain.URL.toLowerCase().includes(this.props.domainFilter.toLowerCase()))) {\n      return true;\n    }\n\n    var dns = Helper._removeDomainProtocol(domain.URL);\n    if (this.props.cnameFilter.length > 0 \n      && \n        (!(dns in this.state.domainsToCnames) || !(this.state.domainsToCnames[dns].toLowerCase().includes(this.props.cnameFilter.toLowerCase())))\n        ) {\n        return true;\n    }\n\n    return false;\n  }\n\n  render() {\n\n  \tif (!this.state || !(\"urls\" in this.state) || this.state.urls.length < 1) {\n  \t\treturn (\n  \t\t\t<Row>\n\t  \t\t\t<Col sm={4}>\n\t  \t\t\t\tNo URLs provided.\n\t  \t\t\t</Col>\n\t  \t\t</Row>\n  \t\t);\n  \t}\n\n  \tconst listUrls = this.state.urls.map((domain) => {\n      \n      var update = this.props.update;\n      var updateDNS = this.props.updateDNS;\n      var updateSSL = this.props.updateSSL;\n      var updateRedirection = this.props.updateRedirection;\n      var display = true;\n      if (this.URLisFiltered(domain)) {\n        update = false;\n        updateDNS = false;\n        updateSSL = false;\n        updateRedirection = false;\n        display = false;\n      }\n\n      domain.URL = domain.URL.trim();\n      \n  \t  return <URL key={domain.URL} \n\t\t\t\t  \t  \t\tsite={domain.Brand} \n\t\t\t\t  \t  \t\tenvironment={domain.Environment} \n\t\t\t\t  \t  \t\tdomain={domain.URL} \n                  cnameMapping={cnameMapping}\n                  update={update}\n                  updateDNS={updateDNS}\n                  updateSSL={updateSSL}\n                  updateRedirection={updateRedirection}\n                  display={display}\n                  parentCallback={this.handleCallback}\n\t\t  \t  \t\t/>\n  \t});\n\n  \treturn (\n  \t\t<tbody>\n\t     {listUrls}\n\t    </tbody>\n\n\t\t);\n  }\n}\n\nexport default URLList;\n","const Helper = {\n\n  _randomstring(length, hasCharacters = true) {\n      var result           = '';\n      var characters       = '0123456789';\n      if (hasCharacters) {\n      \tcharacters += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      }\n      var charactersLength = characters.length;\n      for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  },\n\n  getRandomSGTIN() {\n  \t// return '0' + this._randomstring(12, false) + '9' + this._randomstring(11, true);\n  \treturn this._randomstring(3, false);\n  },\n\n  _removeDomainProtocol(domain) {\n  \tif (domain.includes(\"https://\")) {\n  \t\t domain = domain.replace(\"https://\", \"\");\n  \t} else if (domain.includes(\"http://\")) {\n  \t\t domain = domain.replace(\"http://\", \"\");\n  \t} \n    if (domain.slice(domain.length - 1) === \"/\") {\n      domain = domain.slice(0, -1);\n    }\n  \treturn domain;\n  }\n};\n\nexport default Helper;\n","import React from \"react\";\nimport Helper from \"./Helper\";\n\nconst fetch = require('node-fetch');\n// const sslChecker = require(\"ssl-checker\");\n// const checkCertExpiration = require('check-cert-expiration');\n// const sslCertificate = require('get-ssl-certificate-next')\n\n\n// from: https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors\n// Generated with:\n// \tgit clone https://github.com/Rob--W/cors-anywhere.git\n// \tcd cors-anywhere/\n// \tnpm install\n// \theroku create\n// \tgit push heroku master\n// const CORS_PROXY = 'https://infinite-crag-06340.herokuapp.com/';\n\nconst cnameErrorMessage = \"Doesn't exist\";\nconst serverUnknownMessage = \"Unknown server\";\nconst SSLError = \"Unable to get SSL\";\nconst RedirectionError = \"Unable to get the redirection\";\nconst NoRedirectionMessage = \"No redirection - <span class='rolex-experience' >Rolex experience</span>\";\n\n// curl --location --request https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/dnslookup?DNS=qrt.aptaclub.de --header 'x-api-key: 44XlITH2DCdahKjpe4401eT5070UwdK9xBFCJMR6'\nconst API_DNS = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/dnslookup?DNS=\";\nconst API_SSL = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/getsslexpirydate?DNS=\";\nconst API_REDIRECT = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/getredirect?URL=\";\nconst API_KEY = \"44XlITH2DCdahKjpe4401eT5070UwdK9xBFCJMR6\";\n\nclass URL extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    \tupdateInProgress: false,\n    \tupdateDNSInProgress: false,\n    \tupdateSSLInProgress: false,\n    \tupdateRedirWithSGTINInProgress: false,\n    \tupdateRedirWithoutSGTINInProgress: false,\n    \tsgtin: Helper.getRandomSGTIN()\n    };\n\n    this.state = {\n    \turl: props.domain + \"/\" + this.state.sgtin\n    };\n  }\n\n  componentDidUpdate() {\n  \tif (this.props.update === true && !this.state.updateInProgress && (!this.state.cname || !this.state.SSLExpiryDate || !this.state.redirectWithSGTIN || !this.state.redirectWithoutSGTIN)) {\n  \t\t// updateInProgress is here to avoid calling the update again while it is already called\n  \t\tthis.setState({\n  \t\t\tupdateInProgress: true,\n  \t\t\tupdateDNSInProgress: true,\n  \t\t\tupdateSSLInProgress: true,\n  \t\t\tupdateRedirWithSGTINInProgress: true,\n  \t\t\tupdateRedirWithoutSGTINInProgress: true,\n  \t\t});\n    \tthis.getAllURLDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateDNS === true && !this.state.updateDNSInProgress && !this.state.cname) {\n  \t\tthis.setState({\n  \t\t\tupdateDNSInProgress: true,\n  \t\t});\n    \tthis.getDNSDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateSSL === true && !this.state.updateSSLInProgress && !this.state.SSLExpiryDate) {\n  \t\tthis.setState({\n  \t\t\tupdateSSLInProgress: true,\n  \t\t});\n    \tthis.getSSLDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateRedirection === true \n  \t\t\t\t\t\t&& !this.state.updateRedirWithoutSGTINInProgress && !this.state.redirectWithoutSGTIN\n  \t\t\t\t\t\t&& !this.state.updateRedirWithSGTINInProgress && !this.state.redirectWithSGTIN) {\n  \t\tthis.setState({\n  \t\t\tupdateRedirWithoutSGTINInProgress: true,\n  \t\t\tupdateRedirWithSGTINInProgress: true,\n  \t\t});\n    \tthis.getRedirectionDetails(this.props.domain);\n  \t}\n  }\n\n  async dnsExist(domain) {\n  \t\t\treturn new Promise((resolve, reject) => {\n  \t\t\t\t// console.log(API_DNS+domain);\n  \t\t\t\tfetch(API_DNS+domain, {\n  \t\t\t\t\t\tmethod: 'GET',\n  \t\t\t\t\t\theaders:  {\n  \t\t\t\t\t\t\t'x-api-key': API_KEY\n  \t\t\t\t\t\t}\n  \t\t\t\t\t})\n  \t\t\t    .then(res => res.json())\n  \t        .then(body => resolve(body.CNAME[0]))\n  \t\t\t    .catch(err => {\n  \t\t\t    \tconsole.log(\"getDNS err\", API_DNS+domain, err);\n  \t\t\t    \treject(err);\n  \t\t\t    });\n  \t\t\t});\n  }\n\n  // TODO loop if error\n  async getSSLExpiryDate(domain) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// console.log(API_SSL+domain);\n\t\t\tfetch(API_SSL+domain, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders:  {\n\t\t\t\t\t\t'x-api-key': API_KEY\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    .then(res => res.json())\n        .then(body => resolve(body.daysRemaining))\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getSSL err\", API_SSL+domain, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n\t}\n\n\tasync getRedirect(fullURL) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// console.log(API_REDIRECT+domain);\n\t\t\tfetch(API_REDIRECT+fullURL, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders:  {\n\t\t\t\t\t\t'x-api-key': API_KEY\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    .then(res => {\n\t\t    \tif (!res.ok) {\n\t\t\t    \tconsole.log(\"getRedirect err\", API_REDIRECT+fullURL, \"Not a 200 response\");\n\t\t\t    \treject(res);\n\t\t    \t}\n\t\t    \treturn res.json();\n\t\t    })\n        .then(body => resolve(body.redirect))\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getRedirect err\", API_REDIRECT+fullURL, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n\t}\n\n\t// TODO : if API error, handle it and display a dedicated error message. Or even allows to retry.\n  async getAllURLDetails(domain) {\n  \tawait this.getDNSDetails(domain);\n\n\t\tif (this.state.cname && this.state.cname !== cnameErrorMessage) {\n\t\t\tawait this.getSSLDetails(domain);\n  \t\tawait this.getRedirectionDetails(domain);\n  \t}\n  \tthis.setState({\n  \t\tupdateInProgress: false,\n  \t});\n  }\n\n  async getDNSDetails(domain) {\n\t\tvar domainAndCnameData = {};\n\t\ttry {\n\t\t\tvar cname = await this.dnsExist(Helper._removeDomainProtocol(domain));\n\t\t\tthis.setState({\n\t\t\t\tcname: cname\n\t\t\t});\n\n\t\t\tvar server;\n\t\t\tif (this.props.cnameMapping[cname]) {\n\t\t\t\t\tserver = this.props.cnameMapping[cname];\n\t\t\t} else if (this.props.cnameMapping[cname+\".\"]) {\n\t\t\t\t\tserver = this.props.cnameMapping[cname+\".\"];\n\t\t\t} else {\n\t\t\t\t\tserver = serverUnknownMessage;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tserver: server\n\t\t\t});\n\t\t\tdomainAndCnameData[Helper._removeDomainProtocol(domain)] = cname + ' ' + server;\n\t\t\tthis.props.parentCallback(domainAndCnameData);\n\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\tcname: cnameErrorMessage\n\t\t\t});\n\t\t\tdomainAndCnameData[Helper._removeDomainProtocol(domain)] = cnameErrorMessage;\n\t\t\tthis.props.parentCallback(domainAndCnameData);\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateDNSInProgress: false,\n\t\t});\n  }\n\n  async getSSLDetails(domain) {\n\t\ttry {\n\t\t\tvar SSLExpiryDate = await this.getSSLExpiryDate(Helper._removeDomainProtocol(domain));\n\t\t\tthis.setState({\n\t\t\t\tSSLExpiryDate: SSLExpiryDate\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\tSSLExpiryDate: SSLError\n\t\t\t});\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateSSLInProgress: false,\n\t\t});\n  }\n\n  async getRedirectionDetails(domain) {\n\t\ttry {\n\t\t\t//TODO : test if http/https is there\n\t\t\tvar redirectWithSGTIN = await this.getRedirect(this.state.url);\n\t\t\tif (redirectWithSGTIN === this.state.url) {\n\t\t\t\tredirectWithSGTIN = NoRedirectionMessage;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tredirectWithSGTIN: redirectWithSGTIN\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\tredirectWithSGTIN: RedirectionError\n\t\t\t});\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateRedirWithSGTINInProgress: false,\n\t\t});\n\n\n\t\ttry {\n\t\t\t//TODO : test if http/https is there\n\t\t\tvar redirectWithoutSGTIN = await this.getRedirect(domain);\n\t\t\tif (redirectWithoutSGTIN === domain || redirectWithoutSGTIN === domain+\"/\" || redirectWithoutSGTIN + \"/\" === domain) {\n\t\t\t\tredirectWithoutSGTIN = NoRedirectionMessage;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tredirectWithoutSGTIN: redirectWithoutSGTIN\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\tredirectWithoutSGTIN: RedirectionError\n\t\t\t});\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateRedirWithoutSGTINInProgress: false,\n\t\t});\n  }\n\n\n  redirectionsWithSGTINisTheSameAsWithoutSGTIN() {\n  \tif (!this.state.redirectWithoutSGTIN || this.state.redirectWithoutSGTIN.length < 1 || !this.state.redirectWithSGTIN || this.state.redirectWithSGTIN.length < 1 ) {\n  \t\treturn true;\n  \t}\n\n  \tif (this.state.redirectWithoutSGTIN === this.state.redirectWithSGTIN || this.state.redirectWithSGTIN.includes(this.state.redirectWithoutSGTIN)) {\n  \t\treturn true;\n  \t}\n  \treturn false;\n  }\n\n  render() {\n  \tif (!this.props.display) {\n  \t\treturn null;\n  \t}\n  \t// console.log(this.props, this.state.updateRedirWithoutSGTINInProgress);\n\n  \tvar domain = Helper._removeDomainProtocol(this.props.domain, this.state.url);\n\n  \t// DNS cell\n  \tvar tdCnameClass = \"\";\n  \tvar DNSContent = this.state.cname;\n  \tif (this.state.updateDNSInProgress) {\n  \t\ttdCnameClass = \"updating\";\n  \t}\n  \tif (this.state.server === serverUnknownMessage) {\n  \t\ttdCnameClass = \"warningCell\";\n  \t} \n  \tif (this.state.cname === cnameErrorMessage) {\n  \t\ttdCnameClass = \"errorCell\";\n  \t}\n  \tif (\"server\" in this.state) {\n  \t\tDNSContent = this.state.cname + \"<br/>\" + this.state.server \n  \t}\n\n  \t// SSL cell\n  \tvar tdSSLClass = \"\";\n  \tvar SSLContent = \"\";\n  \tif (this.state.updateSSLInProgress) {\n  \t\ttdSSLClass = \"updating\";\n  \t}\n  \tif (this.state.SSLExpiryDate === SSLError) {\n  \t\ttdSSLClass = \"errorCell\";\n  \t\tSSLContent = SSLError\n  \t} else if (this.state.SSLExpiryDate < 40) {\n\t\t\ttdSSLClass = \"warningCell\";\n\t\t} else if (this.state.SSLExpiryDate) {\n\t\t\tSSLContent = this.state.SSLExpiryDate + \" days\";\n  \t}\n\n  \t// Redirection\n  \tvar tdRedirectionClass = \"\";\n  \tvar RedirectionContent = \"\";\n  \tvar sameRedirectionsWithOrWithoutSGTIN = true;\n  \tif (typeof this.state.redirectWithoutSGTIN !== \"undefined\" && typeof this.state.redirectWithSGTIN !== \"undefined\") {\n  \t\tsameRedirectionsWithOrWithoutSGTIN = this.redirectionsWithSGTINisTheSameAsWithoutSGTIN();\n  \t}\n\n  \tif (this.state.updateRedirWithoutSGTINInProgress) {\n  \t\ttdRedirectionClass = \"updating\";\n  \t}\n  \tif (this.state.redirectWithoutSGTIN === RedirectionError) {\n  \t\ttdRedirectionClass = \"errorCell\";\n  \t\tRedirectionContent = RedirectionError;\n\t\t} else {\n\t\t\tRedirectionContent = this.state.redirectWithoutSGTIN;\n\t\t}\n  \tif (!sameRedirectionsWithOrWithoutSGTIN) {\n  \t\ttdRedirectionClass = \"warningCell\";\n  \t\tRedirectionContent = \"Without SGTIN: \"+ RedirectionContent+\"<br/>With SGTIN:\" + this.state.redirectWithSGTIN;\n  \t}\n\n  \treturn (\n  \t\t<tr>\n  \t\t\t<td>{this.props.site}</td>\n  \t\t\t<td>{this.props.environment}</td>\n  \t\t\t<td>{domain}</td>\n  \t\t\t<td className={tdCnameClass} dangerouslySetInnerHTML={{__html: DNSContent}}></td>\n  \t\t\t<td className={tdSSLClass}>{SSLContent}</td>\n  \t\t\t<td className={tdRedirectionClass} dangerouslySetInnerHTML={{__html: RedirectionContent}}></td>\n  \t\t</tr>\n\t\t);\n  }\n\n}\n\nexport default URL;\n","export default __webpack_public_path__ + \"static/media/Rolex_URL_working_copy.6181e278.csv\";","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport URLList from './URLList';\n\nconst messageFilterNeedsToBeActive = \"Too many URLs to proceed, please use the filters below first. If too many requests are triggered at the same time, some results may be wrong.\";\n\nclass FilterableURLList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleURLsVerifications = this.handleURLsVerifications.bind(this);\n    this.handleFilterSiteChange = this.handleFilterSiteChange.bind(this);\n    this.handleFilterEnvironmentChange = this.handleFilterEnvironmentChange.bind(this);\n    this.handleFilterDomainChange = this.handleFilterDomainChange.bind(this);\n    this.handleFilterCnameChange = this.handleFilterCnameChange.bind(this);\n\n    this.handleDNSVerifications = this.handleDNSVerifications.bind(this);\n    this.handleSSLVerifications = this.handleSSLVerifications.bind(this);\n    this.handleRedirection = this.handleRedirection.bind(this);\n  }\n\n  handleKeyPress(e) {\n  \tif (e.key === 'Enter') {\n  \t\te.preventDefault();\n  \t}\n  }\n\n  handleFilterSiteChange(e) {\n  \tthis.setState({\n  \t\tsite: e.target.value,\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n  handleFilterEnvironmentChange(e) {\n  \tthis.setState({\n  \t\tenvironment: e.target.value,\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n  handleFilterDomainChange(e) {\n  \tthis.setState({\n  \t\tdomain: e.target.value,\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n  handleFilterCnameChange(e) {\n  \tthis.setState({\n  \t\tcname: e.target.value,\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  componentDidMount() {\n  \tthis.setState({\n  \t\tsite: '',\n  \t\tenvironment: '',\n  \t\tdomain: '',\n  \t\tcname: '',\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  isFilterActive() {\n  \treturn this.state.site !== \"\" || this.state.environment !== \"\" || this.state.domain !== \"\" || this.state.cname !== \"\";\n  }\n\n  setUpdateToFalse() {\n  \tthis.setState({\n  \t\tupdate: false,\n  \t\tupdateDNS: false,\n  \t\tupdateSSL: false,\n  \t\tupdateRedirection: false,\n  \t});\n  }\n\n  handleURLsVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdate: true\n  \t});\n  }\n  handleDNSVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateDNS: true\n  \t});\n  }\n  handleSSLVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateSSL: true\n  \t});\n  }\n  handleRedirection() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateRedirection: true\n  \t});\n  }\n\n  render() {\n  \tvar siteFilter = '';\n  \tif (this.state != null && 'site' in this.state) {\n  \t\tsiteFilter = this.state.site;\n  \t}\n  \tvar environmentFilter = '';\n  \tif (this.state != null && 'environment' in this.state) {\n  \t\tenvironmentFilter = this.state.environment;\n  \t}\n  \tvar domainFilter = '';\n  \tif (this.state != null && 'domain' in this.state) {\n  \t\tdomainFilter = this.state.domain;\n  \t}\n  \tvar cnameFilter = '';\n  \tif (this.state != null && 'cname' in this.state) {\n  \t\tcnameFilter = this.state.cname;\n  \t}\n  \tvar update = false;\n  \tif (this.state != null && 'update' in this.state) {\n  \t\tupdate = this.state.update;\n  \t}\n  \tvar updateDNS = false;\n  \tif (this.state != null && 'updateDNS' in this.state) {\n  \t\tupdateDNS = this.state.updateDNS;\n  \t}\n  \tvar updateSSL = false;\n  \tif (this.state != null && 'updateSSL' in this.state) {\n  \t\tupdateSSL = this.state.updateSSL;\n  \t}\n  \tvar updateRedirection = false;\n  \tif (this.state != null && 'updateRedirection' in this.state) {\n  \t\tupdateRedirection = this.state.updateRedirection;\n  \t}\n\n  \treturn (\n  \t\t<Row>\n\t  \t\t<Col sm={10}>\n\t  \t\t</Col>\n\t  \t\t<Col sm={2}>\n\t\t  \t\t<Button variant=\"outline-warning\" onClick={this.handleURLsVerifications} className=\"mt-2 mb-2 main\" >Test all</Button>\n\t  \t\t</Col>\n\n\t  \t\t{this.state && this.state.msg && this.state.msg.length > 0 &&\n\t  \t\t\t<Alert variant=\"danger\" >{this.state.msg}</Alert>\n\t  \t\t}\n\n\t  \t\t<Col sm={12} >\n\t  \t\t\t<Table striped bordered hover responsive size=\"sm\" className=\"stubLinks\">\n\t\t  \t\t  <thead>\n\t\t  \t\t  <tr>\n\t\t\t  \t\t  <td>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleDNSVerifications} >Test</Button>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleSSLVerifications} >Test</Button>\n\t\t\t\t  \t\t</td>\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleRedirection} >Test</Button>\n\t\t\t\t  \t\t</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  <tr>\n\t\t\t  \t\t  <td>Site</td>\n\t\t\t  \t\t  <td>Environment</td>\n\t\t\t  \t\t  <td>Domain</td>\n\t\t\t  \t\t  <td>CNAME</td>\n\t\t\t  \t\t  <td>SSL validity</td>\n\t\t\t  \t\t  <td>Redirect</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  <tr>\n\t\t\t  \t\t  <td>\n\t\t  \t\t  \t\t<Form>\n\t\t  \t  \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Site\" value={siteFilter} onChange={this.handleFilterSiteChange} onKeyPress={this.handleKeyPress} />\n\t\t  \t  \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Envt\" value={environmentFilter} onChange={this.handleFilterEnvironmentChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Domain\" value={domainFilter} onChange={this.handleFilterDomainChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"CNAME & server\" value={cnameFilter} onChange={this.handleFilterCnameChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t\t  \t\t</td>\n\t\t\t  \t\t  <td>\n\t\t\t\t  \t\t</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  </thead>\n\t\t\t  \t\t\t<URLList siteFilter={siteFilter} environmentFilter={environmentFilter} domainFilter={domainFilter} cnameFilter={cnameFilter} update={update} updateDNS={updateDNS} updateSSL={updateSSL} updateRedirection={updateRedirection} />\n\t\t  \t\t</Table>\n\t  \t\t</Col>\n  \t\t</Row>\n\t\t);\n  }\n}\n\nexport default FilterableURLList;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/bootstrap_darky.min.css';\nimport './css/rolex_url.css';\n\nimport Container from 'react-bootstrap/Container';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport FilterableURLList from './components/FilterableURLList';\n\n\nfunction App() {\n  const rolexURL = \n    <Container fluid>\n      <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\">\n        <Navbar.Brand href=\"#\">Rolex - URLs verification tool</Navbar.Brand>\n      </Navbar>\n\n      <FilterableURLList />\n\n    </Container>\n  ;\n  return ReactDOM.render(rolexURL, document.getElementById('root'));\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}