{"version":3,"sources":["components/URLList.js","components/Helper.js","components/URL.js","data/Rolex_URL_working_copy.csv","components/FilterableURLList.js","App.js","reportWebVitals.js","index.js"],"names":["URLs","Helper","_randomstring","length","hasCharacters","result","characters","charactersLength","i","charAt","Math","floor","random","getRandomSGTIN","this","_removeDomainProtocol","domain","includes","replace","slice","fetch","require","cnameErrorMessage","serverUnknownMessage","API_DNS","API_SSL","API_REDIRECT","URL","props","state","updateInProgress","sgtin","url","update","cname","setState","getDNSDetails","a","Promise","resolve","reject","method","then","res","json","body","CNAME","catch","err","console","log","daysRemaining","fullURL","redirect","domainAndCnameData","dnsExist","server","cnameMapping","parentCallback","getSSLExpiryDate","SSLExpiryDate","getRedirect","redirectWithoutSGTIN","redirectWithSGTIN","tdCnameClass","cnameCell","className","display","site","environment","React","Component","URLList","domainsToCnames","handleCallback","bind","childData","readCSV","urls","CSV","response","text","Papa","parse","header","skipEmptyLines","data","getURLs","siteFilter","Brand","toLowerCase","environmentFilter","Environment","domainFilter","dns","cnameFilter","Row","Col","sm","listUrls","map","URLisFiltered","FilterableURLList","handleURLsVerifications","handleFilterSiteChange","handleFilterEnvironmentChange","handleFilterDomainChange","handleFilterCnameChange","e","key","preventDefault","target","value","Button","variant","onClick","Table","striped","bordered","hover","responsive","size","Form","Control","type","placeholder","onChange","onKeyPress","handleKeyPress","App","rolexURL","Container","fluid","Navbar","expand","bg","href","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.d083c06e.chunk.js","sourcesContent":["import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Papa from 'papaparse';\nimport URL from './URL';\n// import CSV from \"../data/urls.csv\";\nimport CSV from \"../data/Rolex_URL_working_copy.csv\";\nimport cnameMapping from \"../data/cname_mapping.json\";\nimport Helper from \"./Helper\";\n\nconst fetch = require('node-fetch');\nvar URLs;\n\nclass URLList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    //  this.state.urls[0] = {'domain': \"https://qru.aptamilessensis.com\", \"update\": false};\n    //  this.state.urls[1] = {'domain': \"https://qr.aptaclub.de\", \"update\": false};\n    //  this.state.urls[2] = {'domain': \"https://qrG.aptaclub.de\", \"update\": false};\n    this.state = {\n     domainsToCnames: {}\n    };\n\n    this.handleCallback = this.handleCallback.bind(this);\n  }\n\n  handleCallback(childData) {\n    var domainsToCnames = { ...this.state.domainsToCnames, ...childData };\n\n    this.setState({\n      domainsToCnames: domainsToCnames\n    });\n  }\n\n  async getURLs() {\n  \t// if (URLs && URLs.length > 0) {\n  \t// \treturn URLs;\n  \t// }\n  \tURLs = await this.readCSV();\n  \tfor (var i = 0; i < URLs.length; i++) {\n  \t\tURLs[i].update = false;\n  \t}\n\n    this.setState({\n    \turls: URLs\n    });\n  }\n\n  async readCSV() {\n  \treturn fetch(CSV)\n  \t  .then((response) => {\n  \t  \treturn response.text();\n  \t  })\n  \t  .then(text => {\n\t\t  \tvar results = Papa.parse(text, { header: true, skipEmptyLines: true }); // object with { data, errors, meta }\n  \t\t  var rows = results.data; // array of objects\n  \t\t  // console.log(\"Results, rows\", results, rows);\n  \t\t  return rows;\n  \t  });\n  }\n\n  componentDidMount() {\n    this.getURLs();\n  }\n\n  // componentDidUpdate() {\n  //   this.getURLs();\n  // }\n\n  URLisFiltered(domain) {\n    if (this.props.siteFilter.length > 0 && !(domain.Brand.toLowerCase().includes(this.props.siteFilter.toLowerCase()))) {\n      return true;\n    }\n    if (this.props.environmentFilter.length > 0 && !(domain.Environment.toLowerCase().includes(this.props.environmentFilter.toLowerCase()))) {\n      return true;\n    }\n    if (this.props.domainFilter.length > 0 && !(domain.URL.toLowerCase().includes(this.props.domainFilter.toLowerCase()))) {\n      return true;\n    }\n\n    var dns = Helper._removeDomainProtocol(domain.URL);\n    if (this.props.cnameFilter.length > 0 \n      && \n        (!(dns in this.state.domainsToCnames) || !(this.state.domainsToCnames[dns].toLowerCase().includes(this.props.cnameFilter.toLowerCase())))\n        ) {\n        return true;\n    }\n\n    return false;\n  }\n\n  render() {\n\n  \tif (!this.state || !(\"urls\" in this.state) || this.state.urls.length < 1) {\n  \t\treturn (\n  \t\t\t<Row>\n\t  \t\t\t<Col sm={4}>\n\t  \t\t\t\tNo URLs provided.\n\t  \t\t\t</Col>\n\t  \t\t</Row>\n  \t\t);\n  \t}\n\n  \tconst listUrls = this.state.urls.map((domain) => {\n      \n      var update = this.props.update;\n      var display = true;\n      if (this.URLisFiltered(domain)) {\n        update = false;\n        display = false;\n      }\n  \t  return <URL key={domain.URL} \n\t\t\t\t  \t  \t\tsite={domain.Brand} \n\t\t\t\t  \t  \t\tenvironment={domain.Environment} \n\t\t\t\t  \t  \t\tdomain={domain.URL} \n                  cnameMapping={cnameMapping}\n\t\t\t\t  \t  \t\tupdate={update}\n                  display={display}\n                  parentCallback={this.handleCallback}\n\t\t  \t  \t\t/>\n  \t});\n\n  \treturn (\n  \t\t<tbody>\n\t     {listUrls}\n\t    </tbody>\n\n\t\t);\n  }\n}\n\nexport default URLList;\n","const Helper = {\n\n  _randomstring(length, hasCharacters = true) {\n      var result           = '';\n      var characters       = '0123456789';\n      if (hasCharacters) {\n      \tcharacters += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      }\n      var charactersLength = characters.length;\n      for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  },\n\n  getRandomSGTIN() {\n  \t// return '0' + this._randomstring(12, false) + '9' + this._randomstring(11, true);\n  \treturn this._randomstring(3, false);\n  },\n\n  _removeDomainProtocol(domain) {\n  \tif (domain.includes(\"https://\")) {\n  \t\t domain = domain.replace(\"https://\", \"\");\n  \t} else if (domain.includes(\"http://\")) {\n  \t\t domain = domain.replace(\"http://\", \"\");\n  \t} \n    if (domain.slice(domain.length - 1) === \"/\") {\n      domain = domain.slice(0, -1);\n    }\n  \treturn domain;\n  }\n};\n\nexport default Helper;\n","import React from \"react\";\nimport Helper from \"./Helper\";\n\nconst fetch = require('node-fetch');\n// const sslChecker = require(\"ssl-checker\");\n// const checkCertExpiration = require('check-cert-expiration');\nconst sslCertificate = require('get-ssl-certificate-next')\n\n\n// from: https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors\n// Generated with:\n// \tgit clone https://github.com/Rob--W/cors-anywhere.git\n// \tcd cors-anywhere/\n// \tnpm install\n// \theroku create\n// \tgit push heroku master\n// const CORS_PROXY = 'https://infinite-crag-06340.herokuapp.com/';\n\nconst cnameErrorMessage = \"Doesn't exist\";\nconst serverUnknownMessage = \"Unknown server\";\n\nconst API_DNS = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/dnslookup?DNS=\";\nconst API_SSL = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/getsslexpirydate?DNS=\";\nconst API_REDIRECT = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/getredirect?URL=\";\n\nclass URL extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    \tupdateInProgress: false,\n    \tsgtin: Helper.getRandomSGTIN()\n    };\n    this.state = {\n    \turl: props.domain + \"/\" + this.state.sgtin\n    };\n  }\n\n  componentDidUpdate() {\n  \tif (this.props.update && !this.state.updateInProgress && !this.state.cname) {\n  \t\t// updateInProgress is here to avoid calling the update again while it is already called but \n  \t\tthis.setState({\n  \t\t\tupdateInProgress: true\n  \t\t});\n    \tthis.getDNSDetails(this.props.domain);\n  \t}\n  }\n\n  // async dnsExist(domain) {\n  // \treturn new Promise((resolve, reject) => {\n\n  // \t\tdomain = Helper._removeDomainProtocol(domain);\n\n  // \t\tvar url = 'https://dns.google/resolve?name=' + domain;\n\n  // \t\tfetch(url)\n\t\t//     .then(res => res.json())\n\t\t//     .then(json => {\n\t\t//     \tif (json.Answer) {\n\t\t//     \t\tvar cname = json.Answer[0].data;\n\t\t// \t  \t\tresolve(cname);\n\t\t//     \t}\n\t\t//     \treject(json);\n\t\t//     })\n\t\t//     .catch(err => {\n\t\t//     \tconsole.log(err);\n\t\t//     \treject(err);\n\t\t//     });\n  // \t});\n  // }\n  \n  async dnsExist(domain) {\n  \t\t\treturn new Promise((resolve, reject) => {\n  \t\t\t\t// console.log(API_DNS+domain);\n  \t\t\t\tfetch(API_DNS+domain, {\n  \t\t\t\t\t\tmethod: 'GET',\n  \t\t\t\t\t})\n  \t\t\t    .then(res => res.json())\n  \t        .then(body => resolve(body.CNAME[0]))\n  \t\t\t    .catch(err => {\n  \t\t\t    \tconsole.log(\"getDNS err\", API_DNS+domain, err);\n  \t\t\t    \treject(err);\n  \t\t\t    });\n  \t\t\t});\n  }\n\n  async getSSLExpiryDate(domain) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// console.log(API_SSL+domain);\n\t\t\tfetch(API_SSL+domain, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t})\n\t\t    .then(res => res.json())\n        .then(body => resolve(body.daysRemaining))\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getSSL err\", API_SSL+domain, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n\t}\n\n\tasync getRedirect(fullURL) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(API_REDIRECT+fullURL, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t})\n\t\t    .then(res => res.json())\n        .then(body => resolve(body.redirect))\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getRedirect err\", API_REDIRECT+fullURL, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n\t}\n\n  async getDNSDetails(domain) {\n\n  \tvar domainAndCnameData = {};\n  \ttry {\n  \t\tvar cname = await this.dnsExist(Helper._removeDomainProtocol(domain));\n  \t\tthis.setState({\n  \t\t\tcname: cname\n  \t\t});\n\n  \t\tvar server;\n  \t\tif (this.props.cnameMapping[cname]) {\n  \t\t\t\tserver = this.props.cnameMapping[cname];\n  \t\t} else {\n  \t\t\t\tserver = serverUnknownMessage;\n  \t\t}\n\t\t\tthis.setState({\n\t\t\t\tserver: server\n\t\t\t});\n\t  \tdomainAndCnameData[Helper._removeDomainProtocol(domain)] = cname + ' ' + server;\n\t  \tthis.props.parentCallback(domainAndCnameData);\n\n\t\t\tif (cname) {\n\t  \t\ttry {\n\t\t  \t\tvar SSLExpiryDate = await this.getSSLExpiryDate(Helper._removeDomainProtocol(domain));\n\t\t  \t\tthis.setState({\n\t\t  \t\t\tSSLExpiryDate: SSLExpiryDate\n\t\t  \t\t});\n\t  \t\t} catch (err) {\n\t  \t\t\tthis.setState({\n\t  \t\t\t\tSSLExpiryDate: \"Unable to get SSL\"\n\t  \t\t\t});\n\t  \t\t\tconsole.log(domain + \": Error\", err);\n\t  \t\t}\n\n\t  \t\ttry {\n\t  \t\t\t//TODO : test if http/https is there\n\t\t  \t\tvar redirectWithoutSGTIN = await this.getRedirect(domain);\n\t\t  \t\tif (redirectWithoutSGTIN === domain+\"/\") {\n\t\t  \t\t\tredirectWithoutSGTIN = \"No redirection\";\n\t\t  \t\t}\n\t\t  \t\tthis.setState({\n\t\t  \t\t\tredirectWithoutSGTIN: redirectWithoutSGTIN\n\t\t  \t\t});\n\t  \t\t} catch (err) {\n\t  \t\t\tthis.setState({\n\t  \t\t\t\tredirectWithoutSGTIN: \"Unable to get the redirection\"\n\t  \t\t\t});\n\t  \t\t\tconsole.log(domain + \": Error\", err);\n\t  \t\t}\n\n\t  \t\ttry {\n\t\t  \t\t//TODO : test if http/https is there\n\t\t  \t\tvar redirectWithSGTIN = await this.getRedirect(this.state.url);\n\t\t  \t\tif (redirectWithSGTIN === this.state.url) {\n\t\t  \t\t\tredirectWithSGTIN = \"No redirection\";\n\t\t  \t\t}\n\t\t  \t\tthis.setState({\n\t\t  \t\t\tredirectWithSGTIN: redirectWithSGTIN\n\t\t  \t\t});\n\t  \t\t} catch (err) {\n\t\t  \t\tthis.setState({\n\t\t  \t\t\tredirectWithSGTIN: \"Unable to get the redirection\"\n\t\t  \t\t});\n\t  \t\t\tconsole.log(domain + \": Error\", err);\n\t  \t\t}\n\t  \t}\n\n  \t} catch (err) {\n  \t\tthis.setState({\n  \t\t\tcname: cnameErrorMessage\n  \t\t});\n  \t\tdomainAndCnameData[Helper._removeDomainProtocol(domain)] = cnameErrorMessage;\n  \t\tthis.props.parentCallback(domainAndCnameData);\n  \t\tconsole.log(domain + \": Error\", err);\n  \t}\n\n  }\n\n  render() {\n  \tvar domain = Helper._removeDomainProtocol(this.props.domain);\n\n  \tvar tdCnameClass = \"\";\n  \tif (this.state.server === serverUnknownMessage) {\n  \t\ttdCnameClass = \"warningCell\";\n  \t} \n  \tif (this.state.cname === cnameErrorMessage) {\n  \t\ttdCnameClass = \"errorCell\";\n  \t}\n  \tvar cnameCell = <td className={tdCnameClass} >{this.state.cname}</td>;\n  \tif (\"server\" in this.state) {\n  \t\tcnameCell = <td className={tdCnameClass} >{this.state.cname}<br/>{this.state.server}</td> \n  \t}\n\n  \tif (!this.props.display) {\n  \t\treturn null;\n  \t}\n\n  \treturn (\n  \t\t<tr>\n  \t\t\t<td>{this.props.site}</td>\n  \t\t\t<td>{this.props.environment}</td>\n  \t\t\t<td>{domain}</td>\n  \t\t\t{cnameCell}\n  \t\t\t<td>{this.state.SSLExpiryDate}</td>\n  \t\t\t<td>{this.state.redirectWithoutSGTIN}</td>\n  \t\t\t<td>{this.state.redirectWithSGTIN}</td>\n  \t\t</tr>\n\t\t);\n  }\n\n}\n\nexport default URL;\n","export default __webpack_public_path__ + \"static/media/Rolex_URL_working_copy.6d109af0.csv\";","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport URLList from './URLList';\n\nclass FilterableURLList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleURLsVerifications = this.handleURLsVerifications.bind(this);\n    this.handleFilterSiteChange = this.handleFilterSiteChange.bind(this);\n    this.handleFilterEnvironmentChange = this.handleFilterEnvironmentChange.bind(this);\n    this.handleFilterDomainChange = this.handleFilterDomainChange.bind(this);\n    this.handleFilterCnameChange = this.handleFilterCnameChange.bind(this);\n  }\n\n  handleKeyPress(e) {\n  \tif (e.key === 'Enter') {\n  \t\te.preventDefault();\n  \t}\n  }\n\n  handleFilterSiteChange(e) {\n  \tthis.setState({\n  \t\tsite: e.target.value,\n  \t\tupdate: false\n  \t});\n  }\n  handleFilterEnvironmentChange(e) {\n  \tthis.setState({\n  \t\tenvironment: e.target.value,\n  \t\tupdate: false\n  \t});\n  }\n  handleFilterDomainChange(e) {\n  \tthis.setState({\n  \t\tdomain: e.target.value,\n  \t\tupdate: false\n  \t});\n  }\n  handleFilterCnameChange(e) {\n  \tthis.setState({\n  \t\tcname: e.target.value,\n  \t\tupdate: false\n  \t});\n  }\n\n  componentDidMount() {\n  \tthis.setState({\n  \t\tsite: '',\n  \t\tenvironment: '',\n  \t\tdomain: '',\n  \t\tupdate: false\n  \t});\n  }\n\n  handleURLsVerifications() {\n  \tthis.setState({\n  \t\tupdate: true\n  \t});\n  }\n\n  render() {\n  \tvar siteFilter = '';\n  \tif (this.state != null && 'site' in this.state) {\n  \t\tsiteFilter = this.state.site;\n  \t}\n  \tvar environmentFilter = '';\n  \tif (this.state != null && 'environment' in this.state) {\n  \t\tenvironmentFilter = this.state.environment;\n  \t}\n  \tvar domainFilter = '';\n  \tif (this.state != null && 'domain' in this.state) {\n  \t\tdomainFilter = this.state.domain;\n  \t}\n  \tvar cnameFilter = '';\n  \tif (this.state != null && 'cname' in this.state) {\n  \t\tcnameFilter = this.state.cname;\n  \t}\n  \tvar update = false;\n  \tif (this.state != null && 'update' in this.state) {\n  \t\tupdate = this.state.update;\n  \t}\n\n  \treturn (\n  \t\t<Row>\n\t  \t\t<Col sm={10}>\n\t  \t\t</Col>\n\t  \t\t<Col sm={2}>\n\t\t  \t\t<Button variant=\"primary\" onClick={this.handleURLsVerifications} className=\"mt-2 mb-2\" >Verify the URLs</Button>\n\t  \t\t</Col>\n\n\t  \t\t<Col sm={12} >\n\t  \t\t\t<Table striped bordered hover responsive size=\"sm\" className=\"stubLinks\">\n\t\t  \t\t  <thead>\n\t\t  \t\t  <tr>\n\t\t\t  \t\t  <td>Site</td>\n\t\t\t  \t\t  <td>Environment</td>\n\t\t\t  \t\t  <td>Domain</td>\n\t\t\t  \t\t  <td>CNAME</td>\n\t\t\t  \t\t  <td>SSL expiry date</td>\n\t\t\t  \t\t  <td>Redirect without SGTIN</td>\n\t\t\t  \t\t  <td>Redirect with SGTIN</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  <tr>\n\t\t\t  \t\t  <td>\n\t\t  \t\t  \t\t<Form>\n\t\t  \t  \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Site\" value={siteFilter} onChange={this.handleFilterSiteChange} onKeyPress={this.handleKeyPress} />\n\t\t  \t  \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Envt\" value={environmentFilter} onChange={this.handleFilterEnvironmentChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Domain\" value={domainFilter} onChange={this.handleFilterDomainChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"CNAME & server\" value={cnameFilter} onChange={this.handleFilterCnameChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td></td>\n\t\t\t  \t\t  <td></td>\n\t\t\t  \t\t  <td></td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  </thead>\n\t\t\t  \t\t\t<URLList siteFilter={siteFilter} environmentFilter={environmentFilter} domainFilter={domainFilter} cnameFilter={cnameFilter} update={update} />\n\t\t  \t\t</Table>\n\t  \t\t</Col>\n  \t\t</Row>\n\t\t);\n  }\n}\n\nexport default FilterableURLList;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/bootstrap_darky.min.css';\nimport './css/rolex_url.css';\n\nimport Container from 'react-bootstrap/Container';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport FilterableURLList from './components/FilterableURLList';\n\n\nfunction App() {\n  const rolexURL = \n    <Container fluid>\n      <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\">\n        <Navbar.Brand href=\"#\">Rolex - URLs verification tool</Navbar.Brand>\n      </Navbar>\n\n      <FilterableURLList />\n\n    </Container>\n  ;\n  return ReactDOM.render(rolexURL, document.getElementById('root'));\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}