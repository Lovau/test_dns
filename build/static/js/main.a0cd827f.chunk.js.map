{"version":3,"sources":["components/URLList.js","components/Helper.js","components/URL.js","data/Rolex_URL_working_copy.csv","components/Column.js","components/FilterableURLList.js","components/Header.js","admin/http-common.js","admin/services/domain.service.js","admin/Helper.js","admin/components/add-domain.component.js","admin/components/domain.component.js","admin/components/domains-list.component.js","App.js","reportWebVitals.js","index.js"],"names":["URLs","Helper","_randomstring","length","hasCharacters","result","characters","charactersLength","i","charAt","Math","floor","random","getRandomSGTIN","this","_removeDomainProtocol","domain","includes","replace","slice","getColumnsNames","isColumnAlwaysVisible","column","indexOf","fetch","require","cnameErrorMessage","serverUnknownMessage","SSLError","RedirectionError","NoRedirectionMessage","RolexExperienceMessage","API_DNS","API_SSL","API_REDIRECT","API_KEY","URL","props","state","updateInProgress","updateDNSInProgress","updateSSLInProgress","updateRedirWithSGTINInProgress","updateRedirWithoutSGTINInProgress","sgtin","url","update","cname","otherRecords","updateDNS","updateSSL","SSLExpiryDate","updateRedirection","redirects","redirectWithSGTIN","redirectWithoutSGTIN","setState","getRedirectionDetails","getSSLDetails","getDNSDetails","getAllURLDetails","a","Promise","resolve","reject","method","headers","then","res","json","body","catch","err","console","log","daysRemaining","fullURL","ok","msg","domainAndCnameData","dnsExist","response","CNAME","otherrecords","Error","server","cnameMapping","parentCallback","getSSLExpiryDate","getRedirect","redirect","display","tdCnameClass","DNSContent","tdSSLClass","SSLContent","tdRedirectionClass","RedirectionContent","sameRedirectionsWithOrWithoutSGTIN","redirectionsWithSGTINisTheSameAsWithoutSGTIN","isRolex","redirectFilter","toLowerCase","value","td","columnsFilters","isVisible","push","className","dangerouslySetInnerHTML","__html","React","Component","URLList","domainsToCnames","handleCallback","bind","childData","readCSV","urls","CSV","text","Papa","parse","header","skipEmptyLines","data","getURLs","dns","cnameFilter","filter","Row","Col","sm","listUrls","map","URLisFiltered","trim","Brand","Environment","Live","GeoDNS","Server","Column","toggleChange","isChecked","onChange","columnName","defaultChecked","Form","Check","type","id","label","messageFilterNeedsToBeActive","FilterableURLList","handleURLsVerifications","handleFilterColumnChange","handleFilterCnameChange","handleFilterRedirectChange","handleDNSVerifications","handleSSLVerifications","handleRedirection","handleColumnChange","e","key","preventDefault","target","placeholder","setUpdateToFalse","columns","site","environment","isFilterActive","checkboxes","header1","header2","header3","Control","size","onKeyPress","handleKeyPress","Container","fluid","Button","variant","onClick","Alert","Table","striped","bordered","hover","responsive","Header","splitLocation","isAdmin","useLocation","pathname","split","Navbar","expand","bg","as","Link","to","Collapse","Nav","axios","create","baseURL","http","get","put","delete","title","getEnvironmentList","AddDomain","onChangeDomain","onChangeBrand","onChangeEnvironment","onChangeLive","onChangeComment","saveDomain","newDomain","brand","live","comment","uuid","randomString","DomainDataService","submitted","hide","htmlFor","required","name","option","Domain","getDomain","updateDomain","deleteDomain","currentDomain","message","match","params","prevState","Item","history","DomainsList","retrieveDomains","refreshList","setActiveDomain","domains","currentIndex","search","fuzzySelected","getAll","Items","orderDomains","defineFuzzySearchList","fuzzylist","selectedItem","index","sort","b","localeCompare","list","keys","width","onSelect","newSelectedItem","setSelectedItem","options","threshold","maxResults","resultsTemplate","styles","clickHandler","results","val","style","selectedIndex","selectedResultStyle","resultsStyle","scope","getClassNameTR","App","useEffect","window","addEventListener","text_only","document","getSelection","toString","clipdata","clipboardData","setData","rolexURL","exact","path","component","ReactDOM","render","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.a0cd827f.chunk.js","sourcesContent":["import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Papa from 'papaparse';\nimport URL from './URL';\n// import CSV from \"../data/urls.csv\";\nimport CSV from \"../data/Rolex_URL_working_copy.csv\";\nimport cnameMapping from \"../data/cname_mapping.json\";\nimport Helper from \"./Helper\";\n\nconst fetch = require('node-fetch');\nvar URLs;\n\nclass URLList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    //  this.state.urls[0] = {'domain': \"https://qru.aptamilessensis.com\", \"update\": false};\n    //  this.state.urls[1] = {'domain': \"https://qr.aptaclub.de\", \"update\": false};\n    //  this.state.urls[2] = {'domain': \"https://qrG.aptaclub.de\", \"update\": false};\n    this.state = {\n     domainsToCnames: {}\n    };\n\n    this.handleCallback = this.handleCallback.bind(this);\n  }\n\n  handleCallback(childData) {\n    var domainsToCnames = { ...this.state.domainsToCnames, ...childData };\n\n    this.setState({\n      domainsToCnames: domainsToCnames\n    });\n  }\n\n  async getURLs() {\n  \t// if (URLs && URLs.length > 0) {\n  \t// \treturn URLs;\n  \t// }\n  \tURLs = await this.readCSV();\n  \tfor (var i = 0; i < URLs.length; i++) {\n  \t\tURLs[i].update = false;\n  \t}\n    this.setState({\n    \turls: URLs\n    });\n  }\n\n  async readCSV() {\n  \treturn fetch(CSV)\n  \t  .then((response) => {\n  \t  \treturn response.text();\n  \t  })\n  \t  .then(text => {\n\t\t  \tvar results = Papa.parse(text, { header: true, skipEmptyLines: true }); // object with { data, errors, meta }\n  \t\t  var rows = results.data; // array of objects\n  \t\t  // console.log(\"Results, rows\", results, rows);\n  \t\t  return rows;\n  \t  });\n  }\n\n  componentDidMount() {\n    this.getURLs();\n  }\n\n  URLisFiltered(domain) {\n\n    var dns = Helper._removeDomainProtocol(domain.URL);\n    if (this.props.cnameFilter.length > 0 \n      && \n        (!(dns in this.state.domainsToCnames) || !(this.state.domainsToCnames[dns].toLowerCase().includes(this.props.cnameFilter.toLowerCase())))\n        ) {\n        return true;\n    }\n\n    for (var column in this.props.columnsFilters) {\n      if (this.props.columnsFilters[column].isVisible \n          && this.props.columnsFilters[column].filter && this.props.columnsFilters[column].filter.length > 0\n          && !domain[column].toLowerCase().includes(this.props.columnsFilters[column].filter.toLowerCase())) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n\n  \tif (!this.state || !(\"urls\" in this.state) || this.state.urls.length < 1) {\n  \t\treturn (\n  \t\t\t<Row>\n\t  \t\t\t<Col sm={4}>\n\t  \t\t\t\tNo URLs provided.\n\t  \t\t\t</Col>\n\t  \t\t</Row>\n  \t\t);\n  \t}\n\n    var redirectFilter = this.props.redirectFilter;\n    \n  \tconst listUrls = this.state.urls.map((domain) => {\n      \n      var update = this.props.update;\n      var updateDNS = this.props.updateDNS;\n      var updateSSL = this.props.updateSSL;\n      var updateRedirection = this.props.updateRedirection;\n      var display = true;\n      if (this.URLisFiltered(domain)) {\n        update = false;\n        updateDNS = false;\n        updateSSL = false;\n        updateRedirection = false;\n        display = false;\n      }\n\n      domain.URL = domain.URL.trim();\n      \n  \t  return <URL \n                  key={domain.URL}\n                  domain={domain.URL}\n                  Brand={domain.Brand}              // dynamic field\n                  Environment={domain.Environment}  // dynamic field\n                  URL={domain.URL}                  // dynamic field\n                  Live={domain.Live}                // dynamic field\n                  GeoDNS={domain.GeoDNS}            // dynamic field\n                  Server={domain.Server}            // dynamic field\n                  redirectFilter={redirectFilter}\n                  cnameMapping={cnameMapping}\n                  update={update}\n                  updateDNS={updateDNS}\n                  updateSSL={updateSSL}\n                  updateRedirection={updateRedirection}\n                  display={display}\n                  parentCallback={this.handleCallback}\n                  columnsFilters={this.props.columnsFilters}\n\t\t  \t  \t\t/>\n  \t});\n\n  \treturn (\n  \t\t<tbody>\n\t     {listUrls}\n\t    </tbody>\n\n\t\t);\n  }\n}\n\nexport default URLList;\n","const Helper = {\n\n  _randomstring(length, hasCharacters = true) {\n      var result           = '';\n      var characters       = '0123456789';\n      if (hasCharacters) {\n      \tcharacters += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      }\n      var charactersLength = characters.length;\n      for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  },\n\n  getRandomSGTIN() {\n  \t// return '0' + this._randomstring(12, false) + '9' + this._randomstring(11, true);\n  \treturn this._randomstring(3, false);\n  },\n\n  _removeDomainProtocol(domain) {\n  \tif (domain.includes(\"https://\")) {\n  \t\t domain = domain.replace(\"https://\", \"\");\n  \t} else if (domain.includes(\"http://\")) {\n  \t\t domain = domain.replace(\"http://\", \"\");\n  \t} \n    if (domain.slice(domain.length - 1) === \"/\") {\n      domain = domain.slice(0, -1);\n    }\n  \treturn domain;\n  },\n\n  getColumnsNames() {\n    return [\n      \"Brand\",\n      \"Environment\",\n      \"URL\",\n      \"Live\",\n      \"GeoDNS\",\n      \"Server\",\n      // \"Redirect URL\",\n    ];\n  },\n\n  isColumnAlwaysVisible(column) {\n    var columnsVisible = [\n      \"Brand\",\n      \"Environment\",\n      \"URL\",\n    ];\n    if (columnsVisible.indexOf(column) !== -1) {\n      return true;\n    }\n    return false;\n  }\n};\n\nexport default Helper;\n","import React from \"react\";\nimport Helper from \"./Helper\";\n\nconst fetch = require('node-fetch');\n// const sslChecker = require(\"ssl-checker\");\n// const checkCertExpiration = require('check-cert-expiration');\n// const sslCertificate = require('get-ssl-certificate-next')\n\n\n// from: https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors\n// Generated with:\n// \tgit clone https://github.com/Rob--W/cors-anywhere.git\n// \tcd cors-anywhere/\n// \tnpm install\n// \theroku create\n// \tgit push heroku master\n// const CORS_PROXY = 'https://infinite-crag-06340.herokuapp.com/';\n\nconst cnameErrorMessage = \"Doesn't exist\";\nconst serverUnknownMessage = \"Unknown server\";\nconst SSLError = \"Unable to get SSL\";\nconst RedirectionError = \"Unable to get the redirection\";\nconst NoRedirectionMessage = \"No redirection\";\nconst RolexExperienceMessage = \"<span class='rolex-experience' >Rolex experience</span>\";\n\n// curl --location --request https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/dnslookup?DNS=qrt.aptaclub.de --header 'x-api-key: 44XlITH2DCdahKjpe4401eT5070UwdK9xBFCJMR6'\n// curl --location --request https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod/dnslookup?DNS=qrt.aptaclub.de --header 'x-api-key: ARISr1o5Cp5ElA4GyfbWeR4hgrZeINBaeLTuJZ04'\n\n// const API_DNS = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/dnslookup?DNS=\"; // sandbox\n// const API_SSL = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/getsslexpirydate?DNS=\"; // sandbox\n// const API_REDIRECT = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/getredirect?URL=\"; // sandbox\n// const API_KEY = \"44XlITH2DCdahKjpe4401eT5070UwdK9xBFCJMR6\"; //sandbox\nconst API_DNS = \"https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod/dnslookup?DNS=\"; // prod\nconst API_SSL = \"https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod/getsslexpirydate?DNS=\"; // prod\nconst API_REDIRECT = \"https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod/getredirect?URL=\"; // prod\nconst API_KEY = \"ARISr1o5Cp5ElA4GyfbWeR4hgrZeINBaeLTuJZ04\"; // prod\n\nclass URL extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    \tupdateInProgress: false,\n    \tupdateDNSInProgress: false,\n    \tupdateSSLInProgress: false,\n    \tupdateRedirWithSGTINInProgress: false,\n    \tupdateRedirWithoutSGTINInProgress: false,\n    \tsgtin: Helper.getRandomSGTIN()\n    };\n\n    this.state = {\n    \turl: props.domain + \"/\" + this.state.sgtin\n    };\n  }\n\n  componentDidUpdate() {\n  \tif (this.props.update === true && !this.state.updateInProgress && !this.state.cname && !this.state.otherRecords) {\n  \t// || !this.state.SSLExpiryDate || !this.state.redirectWithSGTIN || !this.state.redirectWithoutSGTIN)) {\n  \t\n  \t\t// updateInProgress is here to avoid calling the update again while it is already called\n  \t\tthis.setState({\n  \t\t\tupdateInProgress: true,\n  \t\t\tupdateDNSInProgress: true,\n  \t\t\tupdateSSLInProgress: true,\n  \t\t\tupdateRedirWithSGTINInProgress: true,\n  \t\t\tupdateRedirWithoutSGTINInProgress: true,\n  \t\t});\n    \tthis.getAllURLDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateDNS === true && !this.state.updateDNSInProgress && !this.state.cname && !this.state.otherRecords) {\n  \t\tthis.setState({\n  \t\t\tupdateDNSInProgress: true,\n  \t\t});\n    \tthis.getDNSDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateSSL === true && !this.state.updateSSLInProgress && !this.state.SSLExpiryDate) {\n  \t\tthis.setState({\n  \t\t\tupdateSSLInProgress: true,\n  \t\t});\n    \tthis.getSSLDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateRedirection === true \n  \t\t\t\t\t\t&& !this.state.updateRedirWithoutSGTINInProgress\n  \t\t\t\t\t\t&& !this.state.updateRedirWithSGTINInProgress\n  \t\t\t\t\t\t&& (typeof this.state.redirects === \"undefined\" \n  \t\t\t\t\t\t\t\t|| typeof this.state.redirects.redirectWithSGTIN === \"undefined\"\n  \t\t\t\t\t\t\t\t|| typeof this.state.redirects.redirectWithoutSGTIN === \"undefined\")) {\n  \t\tthis.setState({\n  \t\t\tupdateRedirWithoutSGTINInProgress: true,\n  \t\t\tupdateRedirWithSGTINInProgress: true,\n  \t\t});\n    \tthis.getRedirectionDetails(this.props.domain);\n  \t}\n  }\n\n  async dnsExist(domain) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(API_DNS+domain, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders:  {\n\t\t\t\t\t\t'x-api-key': API_KEY\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    .then(res => res.json())\n        .then(body => {\n        \tresolve(body);\n        })\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getDNS err2\", API_DNS+domain, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n  }\n\n  async getSSLExpiryDate(domain) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(API_SSL+domain, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders:  {\n\t\t\t\t\t\t'x-api-key': API_KEY\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    .then(res => res.json())\n        .then(body => {\n        \t\tif (!body.daysRemaining) {\n        \t\t\tconsole.log(\"getSSL err1\", API_SSL+domain, body);\n        \t\t\treturn reject(body);\n        \t\t}\n        \t\treturn resolve(body.daysRemaining);\n        \t})\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getSSL err2\", API_SSL+domain, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n\t}\n\n\tasync getRedirect(fullURL) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(API_REDIRECT+fullURL, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders:  {\n\t\t\t\t\t\t'x-api-key': API_KEY\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    .then(res => {\n\t\t    \tif (!res.ok) {\n\t\t\t    \tconsole.log(\"getRedirect err\", API_REDIRECT+fullURL, \"Not a 200 response\");\n\t\t\t    \treject(res);\n\t\t    \t}\n\t\t    \treturn res.json();\n\t\t    })\n        .then(body => resolve(body))\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getRedirect err\", API_REDIRECT+fullURL, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n\t}\n\n\t// TODO : if API error, handle it and display a dedicated error message. Or even allows to retry.\n  async getAllURLDetails(domain) {\n  \tawait this.getDNSDetails(domain);\n\n\t\tif ((this.state.cname || this.state.otherRecords) && this.state.cname !== cnameErrorMessage) {\n\t\t\tawait this.getSSLDetails(domain);\n  \t\tawait this.getRedirectionDetails(domain);\n  \t} else {\n  \t\tthis.setState({\n  \t\t\tSSLExpiryDate: SSLError,\n  \t\t\tredirects: {\n  \t\t\t\tredirectWithoutSGTIN: {\n  \t\t\t\t\tmsg: RedirectionError \n  \t\t\t\t},\n  \t\t\t\tredirectWithSGTIN: {\n  \t\t\t\t\tmsg: RedirectionError \n  \t\t\t\t},\n  \t\t\t}\n  \t\t});\n  \t}\n  \tthis.setState({\n  \t\tupdateInProgress: false,\n  \t\tupdateDNSInProgress: false,\n  \t\tupdateSSLInProgress: false,\n  \t\tupdateRedirWithoutSGTINInProgress: false,\n  \t\tupdateRedirWithSGTINInProgress: false,\n  \t});\n  }\n\n\n  // TODO: when no CNAME, check if the DNS exists with another record\n  async getDNSDetails(domain) {\n\t\tvar domainAndCnameData = {};\n\t\ttry {\n\t\t\tvar response = await this.dnsExist(Helper._removeDomainProtocol(domain));\n\t\t\tconsole.log(\"DNS response\", response);\n\t\t\tvar cname, otherRecords;\n\t\t\tif ('CNAME' in response && response.CNAME[0]) {\n\t\t\t\tcname = response.CNAME[0];\n\t\t\t} else if ('otherrecords' in response) {\n\t\t\t\totherRecords = response.otherrecords;\n\t\t\t} else {\n\t\t\t\tthrow Error(\"Record not found\");\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tcname: cname,\n\t\t\t\totherRecords: otherRecords\n\t\t\t});\n\n\t\t\tvar server;\n\t\t\tif (this.props.cnameMapping[cname]) {\n\t\t\t\t\tserver = this.props.cnameMapping[cname];\n\t\t\t} else if (this.props.cnameMapping[cname+\".\"]) {\n\t\t\t\t\tserver = this.props.cnameMapping[cname+\".\"];\n\t\t\t} else {\n\t\t\t\t\tserver = serverUnknownMessage;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tserver: server\n\t\t\t});\n\t\t\tdomainAndCnameData[Helper._removeDomainProtocol(domain)] = cname + ' ' + server;\n\t\t\tthis.props.parentCallback(domainAndCnameData);\n\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\tcname: cnameErrorMessage\n\t\t\t});\n\t\t\tdomainAndCnameData[Helper._removeDomainProtocol(domain)] = cnameErrorMessage;\n\t\t\tthis.props.parentCallback(domainAndCnameData);\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateDNSInProgress: false,\n\t\t});\n  }\n\n  async getSSLDetails(domain) {\n\t\ttry {\n\t\t\tvar SSLExpiryDate = await this.getSSLExpiryDate(Helper._removeDomainProtocol(domain));\n\t\t\tthis.setState({\n\t\t\t\tSSLExpiryDate: SSLExpiryDate\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\tSSLExpiryDate: SSLError\n\t\t\t});\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateSSLInProgress: false,\n\t\t});\n  }\n\n  async getRedirectionDetails(domain) {\n\t\ttry {\n\t\t\tvar redirects = {};\n\t\t\tredirects.redirectWithSGTIN = {};\n\t\t\tredirects.redirectWithSGTIN = await this.getRedirect(this.state.url);\n\t\t\tredirects.redirectWithSGTIN.msg = redirects.redirectWithSGTIN.redirect;\n\t\t\tif (redirects.redirectWithSGTIN.redirect === this.state.url) {\n\t\t\t\tredirects.redirectWithSGTIN.msg = NoRedirectionMessage;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tredirects.redirectWithSGTIN.msg = RedirectionError;\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateRedirWithSGTINInProgress: false,\n\t\t});\n\n\t\ttry {\n\t\t\tredirects.redirectWithoutSGTIN = {};\n\t\t\tredirects.redirectWithoutSGTIN = await this.getRedirect(domain);\n\t\t\tredirects.redirectWithoutSGTIN.msg = redirects.redirectWithoutSGTIN.redirect;\n\t\t\tif (redirects.redirectWithoutSGTIN.redirect === domain || redirects.redirectWithoutSGTIN.redirect === domain+\"/\" || redirects.redirectWithoutSGTIN.redirect + \"/\" === domain) {\n\t\t\t\tredirects.redirectWithoutSGTIN.msg = NoRedirectionMessage;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tredirects.redirectWithoutSGTIN.msg = RedirectionError;\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tredirects: redirects,\n\t\t\tupdateRedirWithoutSGTINInProgress: false,\n\t\t});\n  }\n\n\n  redirectionsWithSGTINisTheSameAsWithoutSGTIN() {\n  \tif (!this.state.redirects.redirectWithoutSGTIN.redirect || this.state.redirects.redirectWithoutSGTIN.redirect.length < 1 || !this.state.redirects.redirectWithSGTIN.redirect || this.state.redirects.redirectWithSGTIN.redirect.length < 1 ) {\n  \t\treturn true;\n  \t}\n\n  \tif (this.state.redirects.redirectWithoutSGTIN.redirect === this.state.redirects.redirectWithSGTIN.redirect || this.state.redirects.redirectWithSGTIN.redirect.includes(this.state.redirects.redirectWithoutSGTIN.redirect)) {\n  \t\treturn true;\n  \t}\n  \treturn false;\n  }\n\n  render() {\n  \tif (!this.props.display) {\n  \t\treturn null;\n  \t}\n\n  \t// DNS cell\n  \tvar tdCnameClass = \"\";\n  \tvar DNSContent = this.state.cname;\n  \tif (this.state.updateDNSInProgress) {\n  \t\ttdCnameClass = \"updating\";\n  \t}\n  \tif (this.state.server === serverUnknownMessage) {\n  \t\ttdCnameClass = \"warningCell\";\n  \t} \n  \tif (this.state.cname === cnameErrorMessage) {\n  \t\ttdCnameClass = \"errorCell\";\n  \t}\n  \tif (\"server\" in this.state) {\n  \t\tDNSContent = (this.state.cname ? this.state.cname + \"<br/>\" : '') + this.state.server \n  \t}\n\n  \t// SSL cell\n  \tvar tdSSLClass = \"\";\n  \tvar SSLContent = \"\";\n  \tif (this.state.updateSSLInProgress) {\n  \t\ttdSSLClass = \"updating\";\n  \t}\n  \tif (this.state.SSLExpiryDate === SSLError) {\n  \t\ttdSSLClass = \"errorCell\";\n  \t\tSSLContent = SSLError\n  \t} else if (this.state.SSLExpiryDate < 40) {\n\t\t\ttdSSLClass = \"warningCell\";\n\t\t} else if (this.state.SSLExpiryDate) {\n\t\t\tSSLContent = this.state.SSLExpiryDate + \" days\";\n  \t}\n\n  \t// Redirection\n  \tvar tdRedirectionClass = \"\";\n  \tvar RedirectionContent = \"\";\n  \tvar sameRedirectionsWithOrWithoutSGTIN = true;\n  \tif (this.state.updateRedirWithoutSGTINInProgress) {\n  \t\ttdRedirectionClass = \"updating\";\n  \t}\n  \tif (typeof this.state.redirects !== \"undefined\"\n  \t\t\t&& typeof this.state.redirects.redirectWithoutSGTIN.redirect !== \"undefined\" \n  \t\t\t&& typeof this.state.redirects.redirectWithSGTIN.redirect !== \"undefined\") {\n  \t\t\n\n\n  \t\tsameRedirectionsWithOrWithoutSGTIN = this.redirectionsWithSGTINisTheSameAsWithoutSGTIN();\n\n\t  \tif (this.state.redirects.redirectWithoutSGTIN.msg === RedirectionError) {\n\t  \t\ttdRedirectionClass = \"errorCell\";\n\t  \t\tRedirectionContent = RedirectionError;\n\t\t\t} else {\n\t\t\t\tRedirectionContent = this.state.redirects.redirectWithoutSGTIN.msg;\n\t\t\t\tif (this.state.redirects.redirectWithoutSGTIN.isRolex) {\n\t\t\t\t\tRedirectionContent += \" - \"  + RolexExperienceMessage;\n\t\t\t\t}\n\t\t\t}\n\t  \tif (!sameRedirectionsWithOrWithoutSGTIN) {\n\t  \t\ttdRedirectionClass = \"warningCell\";\n\t  \t\tRedirectionContent = \"Without SGTIN: \"+ RedirectionContent+\"<br/>With SGTIN:\" + this.state.redirects.redirectWithSGTIN.msg;\n\t  \t\tif (this.state.redirects.redirectWithSGTIN.isRolex) {\n\t  \t\t\tRedirectionContent += \" - \"  + RolexExperienceMessage;\n\t  \t\t}\n\t  \t}\n  \t}\n\n  \t// Filter\n  \tif ('redirectFilter' in this.props\n  \t\t\t&& this.props.redirectFilter.length > 0 \n  \t\t\t&& (RedirectionContent.length < 1 || !RedirectionContent.toLowerCase().includes(this.props.redirectFilter.toLowerCase()))) {\n  \t\treturn '';\n  \t}\n\n  \tvar td = [];\n  \tvar value;\n  \tif (this.props && 'columnsFilters' in this.props) {\n\t\t\tfor (var column in this.props.columnsFilters) {\n\t  \t\tif (this.props.columnsFilters[column].isVisible) {\n\t  \t\t\tvalue = ''\n\t  \t\t\tif (column in this.props) {\n\t  \t\t\t\tvalue = this.props[column];\n\t  \t\t\t}\n\t  \t\t\ttd.push(<td key={column}>{value}</td>);\n\t  \t\t}\n\t\t\t}\n\t\t}\n  \treturn (\n  \t\t<tr>\n  \t\t\t{td}\n  \t\t\t<td className={tdCnameClass} dangerouslySetInnerHTML={{__html: DNSContent}}></td>\n  \t\t\t<td className={tdSSLClass}>{SSLContent}</td>\n  \t\t\t<td className={tdRedirectionClass} dangerouslySetInnerHTML={{__html: RedirectionContent}}></td>\n  \t\t</tr>\n\t\t);\n  }\n\n}\n\nexport default URL;\n","export default __webpack_public_path__ + \"static/media/Rolex_URL_working_copy.d85feaa7.csv\";","import React from \"react\";\nimport Form from 'react-bootstrap/Form';\n\nclass Column extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: this.props.defaultChecked,\n    };\n  }\n\n  toggleChange = () => {\n    this.setState({\n      isChecked: !this.state.isChecked,\n    });\n\n    this.props.onChange(this.props.columnName, !this.state.isChecked);\n  }\n\n  render() {\n  \treturn (\n      <Form.Check type='checkbox' id={this.props.columnName} label={this.props.columnName} defaultChecked={this.state.isChecked} onChange={this.toggleChange} />\n\t\t);\n  }\n}\n\nexport default Column;\n","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport URLList from './URLList';\nimport Container from 'react-bootstrap/Container';\nimport Helper from \"./Helper\";\nimport Column from \"./Column\";\n\nconst messageFilterNeedsToBeActive = \"Too many URLs to proceed, please use the filters below first. If too many requests are triggered at the same time, some results may be wrong.\";\n\nclass FilterableURLList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleURLsVerifications = this.handleURLsVerifications.bind(this);\n    this.handleFilterColumnChange = this.handleFilterColumnChange.bind(this);\n    this.handleFilterCnameChange = this.handleFilterCnameChange.bind(this);\n    this.handleFilterRedirectChange = this.handleFilterRedirectChange.bind(this);\n\n    this.handleDNSVerifications = this.handleDNSVerifications.bind(this);\n    this.handleSSLVerifications = this.handleSSLVerifications.bind(this);\n    this.handleRedirection = this.handleRedirection.bind(this);\n\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n  }\n\n  handleKeyPress(e) {\n  \tif (e.key === 'Enter') {\n  \t\te.preventDefault();\n  \t}\n  }\n\n  handleFilterColumnChange(e) {\n  \tvar columnName = e.target.placeholder;\n  \tvar columnsFilters = this.state.columnsFilters;\n  \tcolumnsFilters[columnName].filter = e.target.value;\n  \tthis.setState({\n  \t\tcolumnsFilters: columnsFilters\n  \t})\n  \tthis.setUpdateToFalse();\n  }\n\n  handleFilterCnameChange(e) {\n  \tthis.setState({\n  \t\tcname: e.target.value,\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  handleFilterRedirectChange(e) {\n  \tthis.setState({\n  \t\tredirectFilter: e.target.value,\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  handleColumnChange(columnName, isVisible) {\n  \tvar columnsFilters = this.state.columnsFilters;\n  \tcolumnsFilters[columnName] = {\n  \t\tisVisible: isVisible,\n  \t\tfilter: '',\n  \t};\n  \tthis.setState({\n  \t\tcolumnsFilters: columnsFilters\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  componentDidMount() {\n  \tvar columns = Helper.getColumnsNames();\n  \tvar columnsFilters = [];\n  \tfor (var i = 0; i < columns.length; i++) {\n  \t\tcolumnsFilters[columns[i]] = {\n\t  \t\tisVisible: Helper.isColumnAlwaysVisible(columns[i]),\n\t  \t\tfilter: '',\n\t  \t};\n  \t}\n  \tthis.setState({\n  \t\tcolumnsFilters: columnsFilters,\n  \t\tsite: '',\n  \t\tenvironment: '',\n  \t\tdomain: '',\n  \t\tcname: '',\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  isFilterActive() {\n  \tfor (var column in this.state.columnsFilters) {\n  \t\tif (this.state.columnsFilters[column].isVisible \n  \t\t\t\t&& this.state.columnsFilters[column].filter \n  \t\t\t\t&& this.state.columnsFilters[column].filter.length > 0) {\n  \t\t\treturn true;\n  \t\t}\n  \t}\n  \treturn false;\n  }\n\n  setUpdateToFalse() {\n  \tthis.setState({\n  \t\tupdate: false,\n  \t\tupdateDNS: false,\n  \t\tupdateSSL: false,\n  \t\tupdateRedirection: false,\n  \t});\n  }\n\n  handleURLsVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdate: true\n  \t});\n  }\n  handleDNSVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateDNS: true\n  \t});\n  }\n  handleSSLVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateSSL: true\n  \t});\n  }\n  handleRedirection() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateRedirection: true\n  \t});\n  }\n\n  render() {\n  \tvar cnameFilter = '';\n  \tif (this.state != null && 'cname' in this.state) {\n  \t\tcnameFilter = this.state.cname;\n  \t}\n  \tvar redirectFilter = '';\n  \tif (this.state != null && 'redirectFilter' in this.state) {\n  \t\tredirectFilter = this.state.redirectFilter;\n  \t}\n  \tvar update = false;\n  \tif (this.state != null && 'update' in this.state) {\n  \t\tupdate = this.state.update;\n  \t}\n  \tvar updateDNS = false;\n  \tif (this.state != null && 'updateDNS' in this.state) {\n  \t\tupdateDNS = this.state.updateDNS;\n  \t}\n  \tvar updateSSL = false;\n  \tif (this.state != null && 'updateSSL' in this.state) {\n  \t\tupdateSSL = this.state.updateSSL;\n  \t}\n  \tvar updateRedirection = false;\n  \tif (this.state != null && 'updateRedirection' in this.state) {\n  \t\tupdateRedirection = this.state.updateRedirection;\n  \t}\n\n\n  \tvar checkboxes = [];\n  \tvar header1 = [];\n  \tvar header2 = [];\n  \tvar header3 = [];\n  \tvar columnsFilters = [];\n  \tif (this.state && 'columnsFilters' in this.state) {\n  \t\tcolumnsFilters = this.state.columnsFilters;\n  \t\tfor (var column in this.state.columnsFilters) {\n  \t\t\tvar isVisible = this.state.columnsFilters[column].isVisible;\n\t  \t\tif (isVisible) {\n\t  \t\t\theader1.push(<td key={column}></td>);\n\t  \t\t\theader2.push(<td key={column}>{column}</td>);\n\t  \t\t\theader3.push(<td key={column}><Form>\n\t\t  \t  \t\t    \t\t\t<Form.Control size=\"sm\" type=\"text\" placeholder={column} value={this.state.columnsFilters[column].filter} onChange={this.handleFilterColumnChange} onKeyPress={this.handleKeyPress} />\n\t\t  \t  \t\t  \t\t\t</Form></td>);\n\t  \t\t} \n\t\t\t\tcheckboxes.push(<Column key={column} columnName={column} onChange={this.handleColumnChange} defaultChecked={isVisible} />);\n  \t\t}\n  \t}\n\n  \treturn (\n  \t\t<Container fluid>\n\n\t    \t\t<Col sm={9}>\n\t  \t  \t\t<Button variant=\"outline-warning\" onClick={this.handleURLsVerifications} className=\"mt-2 mb-2 main\" >Test all</Button>\n\t    \t\t</Col>\n  \t\t<Row>\n    \t\t<Col sm={9}>\n    \t\t\t<Form>\n    \t\t\t\t{checkboxes}\n\t\t\t\t\t</Form>\n    \t\t</Col>\n  \t\t</Row>\n  \t\t<Row>\n\n\t  \t\t{this.state && this.state.msg && this.state.msg.length > 0 &&\n\t  \t\t\t<Alert variant=\"danger\" >{this.state.msg}</Alert>\n\t  \t\t}\n\n\t  \t\t<Col sm={12} >\n\t  \t\t\t<Table striped bordered hover responsive size=\"sm\" className=\"stubLinks\">\n\t\t  \t\t  <thead>\n\t\t  \t\t  <tr>\n\t\t\t\t  \t\t{header1}\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleDNSVerifications} >Test</Button>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleSSLVerifications} >Test</Button>\n\t\t\t\t  \t\t</td>\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleRedirection} >Test</Button>\n\t\t\t\t  \t\t</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  <tr>\n\t\t\t\t  \t\t{header2}\n\t\t\t  \t\t  <td>DNS</td>\n\t\t\t  \t\t  <td>SSL validity</td>\n\t\t\t  \t\t  <td>Redirect</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  <tr>\n\t\t\t\t  \t\t{header3}\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"DNS & server\" value={cnameFilter} onChange={this.handleFilterCnameChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t\t  \t\t</td>\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Redirect\" value={redirectFilter} onChange={this.handleFilterRedirectChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t\t  \t\t</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  </thead>\n\t\t\t  \t\t\t<URLList cnameFilter={cnameFilter} redirectFilter={redirectFilter} update={update} updateDNS={updateDNS} updateSSL={updateSSL} updateRedirection={updateRedirection} columnsFilters={columnsFilters} />\n\t\t  \t\t</Table>\n\t  \t\t</Col>\n  \t\t</Row>\n  \t\t</Container>\n\t\t);\n  }\n}\n\nexport default FilterableURLList;\n","import React from \"react\";\nimport { Navbar, Nav} from 'react-bootstrap';\n\nimport { Link} from 'react-router-dom'\nimport { useLocation } from \"react-router-dom\";\n\nconst Header = () => {\n    //assigning location variable\n    const location = useLocation();\n\n    //destructuring pathname from location\n    const { pathname } = location;\n\n    const isAdmin = function(splitLocation) {\n      if (splitLocation[1] === \"admin\") {\n        return true;\n      }\n      return false;\n    };\n\n    //Javascript split method to get the name of the path in array\n    const splitLocation = pathname.split(\"/\");\n\n    if (isAdmin(splitLocation)) {\n      console.log(\"isAdmin\");\n    }\n\n    return (\n      <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\">\n        <Navbar.Brand as={Link} to='/'>Rolex - URLs verification tool</Navbar.Brand>\n        <Navbar.Collapse>\n          <Nav>\n            <Nav.Link as={Link} className=\"link\" to='/admin'>Admin</Nav.Link>\n            <Nav.Link as={Link} className=\"link\" to=\"/admin/add\">Add</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n}\n\nexport default Header;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://ccm35rsq84.execute-api.eu-west-1.amazonaws.com/prod\",\n  headers: {\n    \"Content-type\": \"application/json\",\n    \"x-api-key\": \"44XlITH2DCdahKjpe4401eT5070UwdK9xBFCJMR6\"\n  }\n});","import http from \"../http-common\";\n\nclass DomainDataService {\n  getAll() {\n    return http.get(\"/domains\");\n  }\n\n  get(id) {\n    return http.get(`/domains/${id}`);\n  }\n\n  create(data) {\n    return http.put(\"/domains\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/domains/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/domains/${id}`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/domains?title=${title}`);\n  }\n}\n\nexport default new DomainDataService();","const Helper = {\n\n  getEnvironmentList() {\n    return [\n      \"RC\",\n      \"Staging\",\n      \"Prod Tech\",\n      \"Public prod\",\n    ];\n  },\n\n};\n\nexport default Helper;\n","import React, { Component } from \"react\";\nimport DomainDataService from \"../services/domain.service\";\nimport Helper from \"../Helper\";\n\nexport default class AddDomain extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeDomain = this.onChangeDomain.bind(this);\n    this.onChangeBrand = this.onChangeBrand.bind(this);\n    this.onChangeEnvironment = this.onChangeEnvironment.bind(this);\n    this.onChangeLive = this.onChangeLive.bind(this);\n    this.onChangeComment = this.onChangeComment.bind(this);\n    this.saveDomain = this.saveDomain.bind(this);\n    this.newDomain = this.newDomain.bind(this);\n\n    this.newDomain();\n  }\n\n  componentDidMount() {\n    this.newDomain();\n  }\n\n  onChangeDomain(e) {\n    this.setState({\n      domain: e.target.value\n    });\n  }\n  onChangeBrand(e) {\n    this.setState({\n      brand: e.target.value\n    });\n  }\n  onChangeEnvironment(e) {\n    this.setState({\n      environment: e.target.value\n    });\n  }\n  onChangeLive(e) {\n    this.setState({\n      live: e.target.value\n    });\n  }\n  onChangeComment(e) {\n    this.setState({\n      comment: e.target.value\n    });\n  }\n\n  randomString(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n  }\n\n  saveDomain() {\n    var id = this.randomString(12);\n    var data = {\n      uuid: id,\n      domain: this.state.domain,\n      brand: this.state.brand,\n      environment: this.state.environment,\n      live: this.state.live,\n      comment: this.state.comment,\n    };\n\n    console.log(\"Adding domain\", data);\n\n    DomainDataService.create(data)\n      .then(response => {\n        data.submitted = true;\n        this.setState(data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newDomain() {\n    this.setState({\n      id: null,\n      domain: \"\",\n      brand: \"\",\n      environment: \"\",\n      live: \"N\",\n      comment: \"\",\n\n      submitted: false\n    });\n  }\n\n\n  render() {\n\n    var domain = \"\";\n    var brand = \"\";\n    var comment = \"\";\n\n    if (this.state) {\n      domain = this.state.domain;\n      brand = this.state.brand;\n      comment = this.state.comment;      \n    }\n\n    return (\n      <div className=\"submit-form\">\n        {this.state && this.state.hide && \n          <p>{this.props.domain} has been saved.</p>\n        }\n        {this.state && !(this.state.hide) && this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newDomain}>\n              Add another\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"domain\">Domain</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"domain\"\n                required\n                value={domain}\n                onChange={this.onChangeDomain}\n                name=\"domain\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"brand\">Brand</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"brand\"\n                required\n                value={brand}\n                onChange={this.onChangeBrand}\n                name=\"brand\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"environment\">Environment</label>\n              <select \n                className=\"custom-select\" \n                id=\"environment\"\n                required\n                onChange={this.onChangeEnvironment}\n                name=\"environment\"\n                >\n                {Helper.getEnvironmentList().map((option) => (\n                  <option value={option}>{option}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"live\">Live</label>\n              <select \n                className=\"custom-select\" \n                id=\"live\"\n                required\n                onChange={this.onChangeLive}\n                name=\"live\"\n                >\n                  <option value=\"N\">N</option>\n                  <option value=\"Y\">Y</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"comment\">Comment</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"comment\"\n                required\n                value={comment}\n                onChange={this.onChangeComment}\n                name=\"comment\"\n              />\n            </div>\n\n            <button onClick={this.saveDomain} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DomainDataService from \"../services/domain.service\";\nimport Helper from \"../Helper\";\n\nexport default class Domain extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeDomain = this.onChangeDomain.bind(this);\n    this.onChangeBrand = this.onChangeBrand.bind(this);\n    this.onChangeEnvironment = this.onChangeEnvironment.bind(this);\n    this.onChangeLive = this.onChangeLive.bind(this);\n    this.onChangeComment = this.onChangeComment.bind(this);\n    this.getDomain = this.getDomain.bind(this);\n    this.updateDomain = this.updateDomain.bind(this);\n    this.deleteDomain = this.deleteDomain.bind(this);\n\n    this.state = {\n      currentDomain: {\n        uuid: null,\n        domain: \"\",\n        brand: \"\",\n        environment: \"\",\n        live: \"N\",\n        comment: \"\"\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getDomain(this.props.match.params.id);\n  }\n\n  onChangeDomain(e) {\n    const domain = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentDomain: {\n          ...prevState.currentDomain,\n          domain: domain\n        }\n      };\n    });\n  }\n\n  onChangeBrand(e) {\n    const brand = e.target.value;\n    \n    this.setState(prevState => ({\n      currentDomain: {\n        ...prevState.currentDomain,\n        brand: brand\n      }\n    }));\n  }\n  onChangeEnvironment(e) {\n    const environment = e.target.value;\n    \n    this.setState(prevState => ({\n      currentDomain: {\n        ...prevState.currentDomain,\n        environment: environment\n      }\n    }));\n  }\n  onChangeLive(e) {\n    const live = e.target.value;\n    \n    this.setState(prevState => ({\n      currentDomain: {\n        ...prevState.currentDomain,\n        live: live\n      }\n    }));\n  }\n  onChangeComment(e) {\n    const comment = e.target.value;\n    \n    this.setState(prevState => ({\n      currentDomain: {\n        ...prevState.currentDomain,\n        comment: comment\n      }\n    }));\n  }\n\n  getDomain(id) {\n    DomainDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentDomain: response.data.Item\n        });\n        console.log(\"Getting item\", response.data.Item);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateDomain() {\n    console.log(\"Updating\", this.state.currentDomain, this.state.currentDomain.uuid);\n    DomainDataService.update(\n      this.state.currentDomain.uuid,\n      this.state.currentDomain\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The domain was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteDomain() {\n    console.log(\"Deleting domain\", this.state.currentDomain, this.state.currentDomain.uuid);\n    DomainDataService.delete(this.state.currentDomain.uuid)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/admin/domains')\n        // this.setState({\n        //   message: \"The domain was deleted successfully!\"\n        // });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentDomain } = this.state;\n\n    return (\n      <div>\n        {currentDomain ? (\n          <div className=\"edit-form\">\n            <h4>Domain</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"domain\">Domain</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"domain\"\n                  value={currentDomain.domain}\n                  onChange={this.onChangeDomain}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"brand\">Brand</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"brand\"\n                  value={currentDomain.brand}\n                  onChange={this.onChangeBrand}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"environment\">Environment</label>\n                <select \n                  className=\"custom-select\" \n                  id=\"environment\"\n                  required\n                  onChange={this.onChangeEnvironment}\n                  value={currentDomain.environment}\n                  name=\"environment\"\n                  >\n                  {Helper.getEnvironmentList().map((option) => (\n                    <option value={option}>{option}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"live\">Live</label>\n                <select \n                  className=\"custom-select\" \n                  id=\"live\"\n                  required\n                  onChange={this.onChangeLive}\n                  name=\"live\"\n                  value={currentDomain.live}\n                  >\n                  <option value=\"N\">N</option>\n                  <option value=\"Y\">Y</option>\n                </select>\n\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"comment\">Comment</label>\n                <textarea id=\"comment\" className=\"form-control\" onChange={this.onChangeComment} value={currentDomain.comment}>\n                </textarea>\n              </div>\n            </form>\n\n            <div className=\"deletebutton\" >\n              <button\n                className=\"badge badge-danger mr-2\"\n                onClick={this.deleteDomain}\n              >\n                Delete\n              </button>\n            </div>\n            <div className=\"validatebutton\" >\n              <button\n                type=\"submit\"\n                className=\"badge badge-success\"\n                onClick={this.updateDomain}\n              >\n                Update\n              </button>\n            </div>\n            {this.state.message ?(\n              <div className=\"alert alert-success msgValidation\">\n                <p>{this.state.message}</p>\n              </div>\n            ): (\"\")}\n          </div>\n        ) : (\n          <div className=\"alert alert-primary\"><b>The domain has not been found.</b></div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DomainDataService from \"../services/domain.service\";\nimport { Link } from \"react-router-dom\";\nimport FuzzySearch from \"react-fuzzy/dist/index.js\";\n\nexport default class DomainsList extends Component {\n  constructor(props) {\n    super(props);\n    // this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.retrieveDomains = this.retrieveDomains.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveDomain = this.setActiveDomain.bind(this);\n    // this.search = this.search.bind(this);\n\n    this.state = {\n      domains: [],\n      currentDomain: null,\n      currentIndex: -1,\n      search: \"\",\n      fuzzySelected: null\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveDomains();\n  }\n\n  // onChangeSearch(e) {\n  //   const search = e.target.value;\n\n  //   this.setState({\n  //     search: search\n  //   });\n  // }\n\n  retrieveDomains() {\n    DomainDataService.getAll()\n      .then(response => {\n\n        this.setState({\n          domains: response.data.Items\n        });\n        this.orderDomains();\n        this.defineFuzzySearchList();\n        console.log(\"All domains\", response.data.Items);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  defineFuzzySearchList() {\n    var fuzzylist = [];\n    for (var i = 0; i < this.state.domains.length; i++) {\n      fuzzylist.push({\n        'brand': this.state.domains[i].brand,\n        'environment': this.state.domains[i].environment,\n        'domain': this.state.domains[i].domain,\n        'live': this.state.domains[i].live,\n        'comment': this.state.domains[i].comment,\n      });\n    }\n\n    this.setState({\n      fuzzylist: fuzzylist\n    });\n  }\n\n  setSelectedItem(selectedItem) {\n    console.log(\"setSelectedItem\", selectedItem);\n    this.setState({\n      fuzzySelected: selectedItem\n    });\n  }\n\n  refreshList() {\n    this.retrieveDomains();\n    this.orderDomains();\n    this.setState({\n      currentDomain: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveDomain(domain, index) {\n    this.setState({\n      currentDomain: domain,\n      currentIndex: index\n    });\n    console.log(\"Active domain\", domain, index);\n  }\n  \n  orderDomains() {\n    this.setState({\n      domains: this.state.domains.sort((a, b) => (a.brand.localeCompare(b.brand)))\n    });\n    console.log(\"order\");\n  }\n\n  search() {\n    // this.setState({\n    //   currentDomain: null,\n    //   currentIndex: -1\n    // });\n\n    // DomainDataService.findByTitle(this.state.search)\n    //   .then(response => {\n    //     this.setState({\n    //       domains: response.data\n    //     });\n    //     console.log(response.data);\n    //   })\n    //   .catch(e => {\n    //     console.log(e);\n    //   });\n  }\n\n  getClassNameTR(domain, index) {\n    var className = \"\";\n    if (index === this.state.currentIndex) {\n      className = \"table-primary\";\n    }\n    else {\n      className = \"notselected\";\n    }\n    if (this.state.fuzzySelected && this.state.fuzzySelected.domain === domain.domain) {\n      className += \" fuzzyresult\";\n    } else if (this.state.fuzzySelected && this.state.fuzzySelected.domain !== domain.domain) {\n      className += \" fuzzyresultNotSelected\";\n    }\n\n    return className;\n  }\n\n  render() {\n    const { domains, currentDomain, currentIndex, fuzzylist } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n          <FuzzySearch\n            list={fuzzylist}\n            keys={['brand', 'environment', 'live']}\n            width={430}\n            onSelect={(newSelectedItem) => {\n              this.setSelectedItem(newSelectedItem)\n            }}\n            options={{ \n              threshold: 0.6,\n              maxResults: 15\n            }}\n            resultsTemplate={(props, state, styles, clickHandler) => {\n              return state.results.map((val, i) => {\n                const style = state.selectedIndex === i ? styles.selectedResultStyle : styles.resultsStyle;\n                return (\n                  <div\n                    key={i}\n                    style={style}\n                    onClick={() => clickHandler(i)}\n                  >\n                    {val.brand} | {val.environment} | {val.domain} | {val.live} {(val.comment && val.comment.length > 0 ? \"| {val.comment}\" : \"\" )}\n                  </div>\n                );\n              });\n            }}\n          />\n        </div>\n        </div>\n        <div className=\"col-md-3\">\n          <h4 className=\"adminTitle\">Domains List</h4>\n        </div>\n\n          <table className=\"table table-hover table-striped table-sm adminTable \">\n            <thead>\n              <tr>\n                <th scope=\"col\">Brand</th>\n                <th scope=\"col\">Environment</th>\n                <th scope=\"col\">Domain</th>\n                <th scope=\"col\">Live</th>\n                <th scope=\"col\">Comment</th>\n              </tr>\n            </thead>\n            <tbody>\n\n          {domains && domains.length > 0 && domains.map((domain, index) => (\n              <tr onClick={() => this.setActiveDomain(domain, index)} key={index} className={ this.getClassNameTR(domain, index) }>\n                <td>{domain.brand}</td>\n                <td>{domain.environment}</td>\n                <td>{domain.domain}</td>\n                <td>{domain.live}</td>\n                <td >{domain.comment}\n                {currentDomain && currentIndex === index ? (\n                    <Link\n                      to={\"/admin/domains/\" + currentDomain.uuid}\n                      className=\"badge badge-warning\"\n                    >\n                      Edit\n                    </Link>\n                ) : (\"\")}\n                </td>\n              </tr>\n          ))}\n            </tbody>\n          </table>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/bootstrap_darky.min.css';\nimport './css/rolex_url.css';\n\nimport Container from 'react-bootstrap/Container';\nimport FilterableURLList from './components/FilterableURLList';\nimport Header from './components/Header';\nimport AddDomain from \"./admin/components/add-domain.component\";\nimport Domain from \"./admin/components/domain.component\";\nimport DomainsList from \"./admin/components/domains-list.component\";\nimport \"./admin/App.css\";\n\nfunction App() {\n\n  // trim spaces when copying a text \n  React.useEffect(() => {\n    window.addEventListener('copy', function(e) {\n      const text_only = document.getSelection().toString().trim();\n      const clipdata = e.clipboardData || window.clipboardData;  \n      clipdata.setData('text/plain', text_only);\n      clipdata.setData('text/html', text_only);\n      e.preventDefault();\n    });\n  }, []);\n\n  const rolexURL = \n    <Container fluid>\n\n      <BrowserRouter>\n        <Header />\n        <Switch>\n            <Route exact path=\"/\" component={FilterableURLList} />\n            <Route exact path={[\"/admin/\", \"/admin/domains\"]} component={DomainsList} />\n            <Route exact path=\"/admin/add\" component={AddDomain} />\n            <Route path=\"/admin/domains/:id\" component={Domain} />\n        </Switch>\n      </BrowserRouter>\n\n    </Container>\n  ;\n  return ReactDOM.render(rolexURL, document.getElementById('root'));\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}