{"version":3,"sources":["components/Helper.js","admin/http-common.js","admin/services/domain.service.js","components/URL.js","data/Rolex_URL_working_copy.csv","components/URLList.js","components/Column.js","components/FilterableURLList.js","components/Header.js","admin/components/add-domain.component.js","App.js","reportWebVitals.js","index.js"],"names":["Helper","isAdmin","location","pathname","split","_randomstring","length","hasCharacters","result","characters","charactersLength","i","charAt","Math","floor","random","getEnvironmentList","getRandomSGTIN","this","_removeDomainProtocol","domain","includes","replace","slice","getColumnsNames","isColumnAlwaysVisible","column","indexOf","getDBNameFromDisplayName","displayName","columns","columnNameToDisplay","columnNameDB","getDisplayNameFromDBName","fieldDBName","axios","create","baseURL","headers","http","get","id","data","put","delete","title","fetch","require","cnameErrorMessage","serverUnknownMessage","SSLError","RedirectionError","NoRedirectionMessage","RolexExperienceMessage","API_DNS","API_SSL","API_REDIRECT","API_KEY","URL","props","setActiveDomain","bind","setEditMode","cancelEditMode","validateComment","onChangeComment","state","updateInProgress","updateDNSInProgress","updateSSLInProgress","updateRedirWithSGTINInProgress","updateRedirWithoutSGTINInProgress","sgtin","url","isSelected","editMode","e","setState","console","log","comment","target","value","Object","assign","DomainDataService","update","uuid","then","response","submitted","message","catch","cname","otherRecords","updateDNS","updateSSL","SSLExpiryDate","updateRedirection","redirects","redirectWithSGTIN","redirectWithoutSGTIN","getRedirectionDetails","getSSLDetails","getDNSDetails","getAllURLDetails","a","Promise","resolve","reject","method","res","json","body","err","daysRemaining","fullURL","ok","msg","domainAndCnameData","dnsExist","CNAME","otherrecords","Error","server","cnameMapping","parentCallback","getSSLExpiryDate","getRedirect","redirect","display","tdCnameClass","DNSContent","tdSSLClass","SSLContent","tdRedirectionClass","RedirectionContent","sameRedirectionsWithOrWithoutSGTIN","redirectionsWithSGTINisTheSameAsWithoutSGTIN","isRolex","redirectFilter","toLowerCase","TDs","countTD","editLink","columnsFilters","isVisible","isadmin","to","className","push","onClick","name","onChange","defaultValue","rows","dangerouslySetInnerHTML","__html","React","Component","URLList","domainsToCnames","handleCallback","loadingURLs","childData","readCSV","URLs","urls","CSV","text","Papa","parse","header","skipEmptyLines","getAll","Items","domains","orderDomains","sort","b","brandcompare","brand","localeCompare","environment","retrieveDomains","dns","cnameFilter","filter","Row","Col","sm","listUrls","map","URLisFiltered","trim","live","updated","Column","toggleChange","isChecked","columnName","defaultChecked","Form","Check","type","label","messageFilterNeedsToBeActive","FilterableURLList","handleURLsVerifications","handleFilterColumnChange","handleFilterCnameChange","handleFilterRedirectChange","handleDNSVerifications","handleSSLVerifications","handleRedirection","handleColumnChange","key","preventDefault","placeholder","columnDBName","setUpdateToFalse","columnDisplayName","site","isFilterActive","checkboxes","header1","header2","header3","Control","size","onKeyPress","handleKeyPress","Container","fluid","Button","variant","Alert","Table","striped","bordered","hover","responsive","Header","useLocation","Navbar","expand","bg","Brand","as","Link","Collapse","Nav","isValidDomain","AddDomain","onChangeDomain","onChangeBrand","onChangeEnvironment","onChangeLive","createNewDomain","updateDomain","deleteDomain","newDomain","currentDomain","validationMsg","match","params","isNew","loadDomain","Item","startsWith","validateAndCleanDomain","validateBrand","validateAndCleanData","history","htmlFor","required","option","App","useEffect","window","addEventListener","text_only","document","getSelection","toString","clipdata","clipboardData","setData","rolexURL","exact","path","component","ReactDOM","render","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.8ea686ab.chunk.js","sourcesContent":["const Helper = {\n\n  isAdmin(location) {\n    //destructuring pathname from location\n    const { pathname } = location;\n    \n    //Javascript split method to get the name of the path in array\n    const splitLocation = pathname.split(\"/\");\n    if (splitLocation[1] === \"isadmin\") {\n      return true;\n    }\n    return false;\n  },\n\n  _randomstring(length, hasCharacters = true) {\n      var result           = '';\n      var characters       = '0123456789';\n      if (hasCharacters) {\n      \tcharacters += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      }\n      var charactersLength = characters.length;\n      for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  },\n\n  getEnvironmentList() {\n    return [\n      \"RC\",\n      \"Staging\",\n      \"Prod Tech\",\n      \"Public prod\",\n    ];\n  },\n\n  getRandomSGTIN() {\n  \t// return '0' + this._randomstring(12, false) + '9' + this._randomstring(11, true);\n  \treturn this._randomstring(3, false);\n  },\n\n  _removeDomainProtocol(domain) {\n  \tif (domain.includes(\"https://\")) {\n  \t\t domain = domain.replace(\"https://\", \"\");\n  \t} else if (domain.includes(\"http://\")) {\n  \t\t domain = domain.replace(\"http://\", \"\");\n  \t} \n    if (domain.slice(domain.length - 1) === \"/\") {\n      domain = domain.slice(0, -1);\n    }\n  \treturn domain;\n  },\n\n  //mapping: columnNameInDB => column name displayed\n  getColumnsNames() {\n    return [\n      { \n        \"columnNameDB\": \"brand\",\n        \"columnNameToDisplay\": \"Brand\"\n      },\n      { \n        \"columnNameDB\": \"environment\",\n        \"columnNameToDisplay\": \"Environment\"\n      },\n      { \n        \"columnNameDB\": \"domain\",\n        \"columnNameToDisplay\": \"URL\"\n      },\n      { \n        \"columnNameDB\": \"live\",\n        \"columnNameToDisplay\": \"Live\"\n      },\n      { \n        \"columnNameDB\": \"comment\",\n        \"columnNameToDisplay\": \"Comment\"\n      },\n      { \n        \"columnNameDB\": \"updated\",\n        \"columnNameToDisplay\": \"Last update\"\n      }\n    ];\n  },\n\n  isColumnAlwaysVisible(column) {\n    var columnsVisible = [\n      \"brand\",\n      \"environment\",\n      \"domain\",\n    ];\n    if (columnsVisible.indexOf(column) !== -1) {\n      return true;\n    }\n    return false;\n  },\n\n  getDBNameFromDisplayName(displayName) {\n    var columns = this.getColumnsNames();\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i].columnNameToDisplay === displayName) {\n        return columns[i].columnNameDB;\n      }\n    }\n  },\n\n  getDisplayNameFromDBName(fieldDBName) {\n    var columns = this.getColumnsNames();\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i].columnNameDB === fieldDBName) {\n        return columns[i].columnNameToDisplay;\n      }\n    }\n  }\n};\n\nexport default Helper;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod\",\n  headers: {\n    \"Content-type\": \"application/json\",\n    \"x-api-key\": \"ARISr1o5Cp5ElA4GyfbWeR4hgrZeINBaeLTuJZ04\"\n  }\n});","import http from \"../http-common\";\n\nclass DomainDataService {\n  getAll() {\n    return http.get(\"/domains\");\n  }\n\n  get(id) {\n    return http.get(`/domains/${id}`);\n  }\n\n  create(data) {\n    return http.put(\"/domains\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/domains/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/domains/${id}`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/domains?title=${title}`);\n  }\n}\n\nexport default new DomainDataService();","import React from \"react\";\nimport Helper from \"./Helper\";\nimport DomainDataService from \"../admin/services/domain.service\";\nimport { Link } from \"react-router-dom\";\n\nconst fetch = require('node-fetch');\n// const sslChecker = require(\"ssl-checker\");\n// const checkCertExpiration = require('check-cert-expiration');\n// const sslCertificate = require('get-ssl-certificate-next')\n\nconst cnameErrorMessage = \"Doesn't exist\";\nconst serverUnknownMessage = \"Unknown server\";\nconst SSLError = \"Unable to get SSL\";\nconst RedirectionError = \"Unable to get the redirection\";\nconst NoRedirectionMessage = \"No redirection\";\nconst RolexExperienceMessage = \"<span class='rolex-experience' >Rolex experience</span>\";\n\n// curl --location --request https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/dnslookup?DNS=qrt.aptaclub.de --header 'x-api-key: 44XlITH2DCdahKjpe4401eT5070UwdK9xBFCJMR6'\n// curl --location --request https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod/dnslookup?DNS=qrt.aptaclub.de --header 'x-api-key: ARISr1o5Cp5ElA4GyfbWeR4hgrZeINBaeLTuJZ04'\n\n// const API_DNS = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/dnslookup?DNS=\"; // sandbox\n// const API_SSL = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/getsslexpirydate?DNS=\"; // sandbox\n// const API_REDIRECT = \"https://tj4k759l15.execute-api.eu-west-1.amazonaws.com/test/getredirect?URL=\"; // sandbox\n// const API_KEY = \"44XlITH2DCdahKjpe4401eT5070UwdK9xBFCJMR6\"; //sandbox\n\nconst API_DNS = \"https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod/dnslookup?DNS=\"; // prod\nconst API_SSL = \"https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod/getsslexpirydate?DNS=\"; // prod\nconst API_REDIRECT = \"https://fd902g59y1.execute-api.eu-west-1.amazonaws.com/prod/getredirect?URL=\"; // prod\nconst API_KEY = \"ARISr1o5Cp5ElA4GyfbWeR4hgrZeINBaeLTuJZ04\"; // prod\n\nclass URL extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.setActiveDomain = this.setActiveDomain.bind(this);\n    this.setEditMode = this.setEditMode.bind(this);\n    this.cancelEditMode = this.cancelEditMode.bind(this);\n    this.validateComment = this.validateComment.bind(this);\n    this.onChangeComment = this.onChangeComment.bind(this);\n\n    this.state = {\n    \tupdateInProgress: false,\n    \tupdateDNSInProgress: false,\n    \tupdateSSLInProgress: false,\n    \tupdateRedirWithSGTINInProgress: false,\n    \tupdateRedirWithoutSGTINInProgress: false,\n    \tsgtin: Helper.getRandomSGTIN()\n    };\n\n    this.state = {\n    \turl: props.domain + \"/\" + this.state.sgtin,\n      isSelected: false,\n      editMode: false\n    };\n  }\n  \n  setEditMode(e) {\n  \tif (!this.state.editMode) {\n\t  \tthis.setState({\n\t  \t\teditMode: true\n\t  \t});\n  \t}\n  }  \n\n  onChangeComment(e) {\n  \tconsole.log(\"comment updated\");\n    this.setState({\n      comment: e.target.value\n    });\n  }\n \n  cancelEditMode(e) {\n  \tconsole.log(\"Cancel comment\");\n  \tthis.setState({\n  \t\teditMode: false,\n  \t\tcomment: null\n  \t});\n  }\n\n  validateComment(e) {\n  \tif (!this.state.comment) {\n  \t\tthis.setState({\n  \t\t\teditMode: false,\n  \t\t});\n  \t\treturn;\n  \t}\n\n  \tvar domain = Object.assign({}, this.props);\n  \tdomain.comment = this.state.comment;\n  \tconsole.log(\"validate comment\", domain);\n\n  \tDomainDataService.update(\n  \t  domain.uuid,\n  \t  domain\n  \t)\n  \t  .then(response => {\n  \t    console.log(response.data);\n  \t    this.setState({\n  \t      submitted: true,\n  \t      message: \"The domain was updated successfully!\"\n  \t    });\n  \t  })\n  \t  .catch(e => {\n  \t    console.log(e);\n  \t  });\n\n  \tthis.setState({\n  \t\teditMode: false\n  \t});\n  }\n\n  setActiveDomain() {\n    this.setState({\n      isSelected: !this.state.isSelected\n    });\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n  \tif (this.props.update === true && !this.state.updateInProgress && !this.state.cname && !this.state.otherRecords) {\n  \t// || !this.state.SSLExpiryDate || !this.state.redirectWithSGTIN || !this.state.redirectWithoutSGTIN)) {\n  \t\n  \t\t// updateInProgress is here to avoid calling the update again while it is already called\n  \t\tthis.setState({\n  \t\t\tupdateInProgress: true,\n  \t\t\tupdateDNSInProgress: true,\n  \t\t\tupdateSSLInProgress: true,\n  \t\t\tupdateRedirWithSGTINInProgress: true,\n  \t\t\tupdateRedirWithoutSGTINInProgress: true,\n  \t\t});\n    \tthis.getAllURLDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateDNS === true && !this.state.updateDNSInProgress && !this.state.cname && !this.state.otherRecords) {\n  \t\tthis.setState({\n  \t\t\tupdateDNSInProgress: true,\n  \t\t});\n    \tthis.getDNSDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateSSL === true && !this.state.updateSSLInProgress && !this.state.SSLExpiryDate) {\n  \t\tthis.setState({\n  \t\t\tupdateSSLInProgress: true,\n  \t\t});\n    \tthis.getSSLDetails(this.props.domain);\n  \t}\n  \telse if (this.props.updateRedirection === true \n  \t\t\t\t\t\t&& !this.state.updateRedirWithoutSGTINInProgress\n  \t\t\t\t\t\t&& !this.state.updateRedirWithSGTINInProgress\n  \t\t\t\t\t\t&& (typeof this.state.redirects === \"undefined\" \n  \t\t\t\t\t\t\t\t|| typeof this.state.redirects.redirectWithSGTIN === \"undefined\"\n  \t\t\t\t\t\t\t\t|| typeof this.state.redirects.redirectWithoutSGTIN === \"undefined\")) {\n  \t\tthis.setState({\n  \t\t\tupdateRedirWithoutSGTINInProgress: true,\n  \t\t\tupdateRedirWithSGTINInProgress: true,\n  \t\t});\n    \tthis.getRedirectionDetails(this.props.domain);\n  \t}\n  }\n\n  async dnsExist(domain) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(API_DNS+domain, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders:  {\n\t\t\t\t\t\t'x-api-key': API_KEY\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    .then(res => res.json())\n        .then(body => {\n        \tresolve(body);\n        })\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getDNS err2\", API_DNS+domain, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n  }\n\n  async getSSLExpiryDate(domain) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(API_SSL+domain, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders:  {\n\t\t\t\t\t\t'x-api-key': API_KEY\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    .then(res => res.json())\n        .then(body => {\n        \t\tif (!body.daysRemaining) {\n        \t\t\tconsole.log(\"getSSL err1\", API_SSL+domain, body);\n        \t\t\treturn reject(body);\n        \t\t}\n        \t\treturn resolve(body.daysRemaining);\n        \t})\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getSSL err2\", API_SSL+domain, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n\t}\n\n\tasync getRedirect(fullURL) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(API_REDIRECT+fullURL, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders:  {\n\t\t\t\t\t\t'x-api-key': API_KEY\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t    .then(res => {\n\t\t    \tif (!res.ok) {\n\t\t\t    \tconsole.log(\"getRedirect err\", API_REDIRECT+fullURL, \"Not a 200 response\");\n\t\t\t    \treject(res);\n\t\t    \t}\n\t\t    \treturn res.json();\n\t\t    })\n        .then(body => resolve(body))\n\t\t    .catch(err => {\n\t\t    \tconsole.log(\"getRedirect err\", API_REDIRECT+fullURL, err);\n\t\t    \treject(err);\n\t\t    });\n\t\t});\n\t}\n\n\t// TODO : if API error, handle it and display a dedicated error message. Or even allows to retry.\n  async getAllURLDetails(domain) {\n  \tawait this.getDNSDetails(domain);\n\n\t\tif ((this.state.cname || this.state.otherRecords) && this.state.cname !== cnameErrorMessage) {\n\t\t\tawait this.getSSLDetails(domain);\n  \t\tawait this.getRedirectionDetails(domain);\n  \t} else {\n  \t\tthis.setState({\n  \t\t\tSSLExpiryDate: SSLError,\n  \t\t\tredirects: {\n  \t\t\t\tredirectWithoutSGTIN: {\n  \t\t\t\t\tmsg: RedirectionError \n  \t\t\t\t},\n  \t\t\t\tredirectWithSGTIN: {\n  \t\t\t\t\tmsg: RedirectionError \n  \t\t\t\t},\n  \t\t\t}\n  \t\t});\n  \t}\n  \tthis.setState({\n  \t\tupdateInProgress: false,\n  \t\tupdateDNSInProgress: false,\n  \t\tupdateSSLInProgress: false,\n  \t\tupdateRedirWithoutSGTINInProgress: false,\n  \t\tupdateRedirWithSGTINInProgress: false,\n  \t});\n  }\n\n\n  // TODO: when no CNAME, check if the DNS exists with another record\n  async getDNSDetails(domain) {\n\t\tvar domainAndCnameData = {};\n\t\ttry {\n\t\t\tvar response = await this.dnsExist(Helper._removeDomainProtocol(domain));\n\t\t\tconsole.log(\"DNS response\", response);\n\t\t\tvar cname, otherRecords;\n\t\t\tif ('CNAME' in response && response.CNAME[0]) {\n\t\t\t\tcname = response.CNAME[0];\n\t\t\t} else if ('otherrecords' in response) {\n\t\t\t\totherRecords = response.otherrecords;\n\t\t\t} else {\n\t\t\t\tthrow Error(\"Record not found\");\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tcname: cname,\n\t\t\t\totherRecords: otherRecords\n\t\t\t});\n\n\t\t\tvar server;\n\t\t\tif (this.props.cnameMapping[cname]) {\n\t\t\t\t\tserver = this.props.cnameMapping[cname];\n\t\t\t} else if (this.props.cnameMapping[cname+\".\"]) {\n\t\t\t\t\tserver = this.props.cnameMapping[cname+\".\"];\n\t\t\t} else {\n\t\t\t\t\tserver = serverUnknownMessage;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tserver: server\n\t\t\t});\n\t\t\tdomainAndCnameData[Helper._removeDomainProtocol(domain)] = cname + ' ' + server;\n\t\t\tthis.props.parentCallback(domainAndCnameData);\n\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\tcname: cnameErrorMessage\n\t\t\t});\n\t\t\tdomainAndCnameData[Helper._removeDomainProtocol(domain)] = cnameErrorMessage;\n\t\t\tthis.props.parentCallback(domainAndCnameData);\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateDNSInProgress: false,\n\t\t});\n  }\n\n  async getSSLDetails(domain) {\n\t\ttry {\n\t\t\tvar SSLExpiryDate = await this.getSSLExpiryDate(Helper._removeDomainProtocol(domain));\n\t\t\tthis.setState({\n\t\t\t\tSSLExpiryDate: SSLExpiryDate\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\tSSLExpiryDate: SSLError\n\t\t\t});\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateSSLInProgress: false,\n\t\t});\n  }\n\n  async getRedirectionDetails(domain) {\n\t\ttry {\n\t\t\tvar redirects = {};\n\t\t\tredirects.redirectWithSGTIN = {};\n\t\t\tredirects.redirectWithSGTIN = await this.getRedirect(this.state.url);\n\t\t\tredirects.redirectWithSGTIN.msg = redirects.redirectWithSGTIN.redirect;\n\t\t\tif (redirects.redirectWithSGTIN.redirect === this.state.url) {\n\t\t\t\tredirects.redirectWithSGTIN.msg = NoRedirectionMessage;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tredirects.redirectWithSGTIN.msg = RedirectionError;\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tupdateRedirWithSGTINInProgress: false,\n\t\t});\n\n\t\ttry {\n\t\t\tredirects.redirectWithoutSGTIN = {};\n\t\t\tredirects.redirectWithoutSGTIN = await this.getRedirect(domain);\n\t\t\tredirects.redirectWithoutSGTIN.msg = redirects.redirectWithoutSGTIN.redirect;\n\t\t\tif (redirects.redirectWithoutSGTIN.redirect === domain || redirects.redirectWithoutSGTIN.redirect === domain+\"/\" || redirects.redirectWithoutSGTIN.redirect + \"/\" === domain) {\n\t\t\t\tredirects.redirectWithoutSGTIN.msg = NoRedirectionMessage;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tredirects.redirectWithoutSGTIN.msg = RedirectionError;\n\t\t\tconsole.log(domain + \": Error\", err);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tredirects: redirects,\n\t\t\tupdateRedirWithoutSGTINInProgress: false,\n\t\t});\n  }\n\n  redirectionsWithSGTINisTheSameAsWithoutSGTIN() {\n  \tif (!this.state.redirects.redirectWithoutSGTIN.redirect || this.state.redirects.redirectWithoutSGTIN.redirect.length < 1 || !this.state.redirects.redirectWithSGTIN.redirect || this.state.redirects.redirectWithSGTIN.redirect.length < 1 ) {\n  \t\treturn true;\n  \t}\n\n  \tif (this.state.redirects.redirectWithoutSGTIN.redirect === this.state.redirects.redirectWithSGTIN.redirect || this.state.redirects.redirectWithSGTIN.redirect.includes(this.state.redirects.redirectWithoutSGTIN.redirect)) {\n  \t\treturn true;\n  \t}\n  \treturn false;\n  }\n\n  render() {\n  \tif (!this.props.display) {\n  \t\treturn null;\n  \t}\n\n  \t// DNS cell\n  \tvar tdCnameClass = \"\";\n  \tvar DNSContent = this.state.cname;\n  \tif (this.state.updateDNSInProgress) {\n  \t\ttdCnameClass = \"updating\";\n  \t}\n  \tif (this.state.server === serverUnknownMessage) {\n  \t\ttdCnameClass = \"warningCell\";\n  \t} \n  \tif (this.state.cname === cnameErrorMessage) {\n  \t\ttdCnameClass = \"errorCell\";\n  \t}\n  \tif (\"server\" in this.state) {\n  \t\tDNSContent = (this.state.cname ? this.state.cname + \"<br/>\" : '') + this.state.server \n  \t}\n\n  \t// SSL cell\n  \tvar tdSSLClass = \"\";\n  \tvar SSLContent = \"\";\n  \tif (this.state.updateSSLInProgress) {\n  \t\ttdSSLClass = \"updating\";\n  \t}\n  \tif (this.state.SSLExpiryDate === SSLError) {\n  \t\ttdSSLClass = \"errorCell\";\n  \t\tSSLContent = SSLError\n  \t} else if (this.state.SSLExpiryDate < 40) {\n\t\t\ttdSSLClass = \"warningCell\";\n\t\t} else if (this.state.SSLExpiryDate) {\n\t\t\tSSLContent = this.state.SSLExpiryDate + \" days\";\n  \t}\n\n  \t// Redirection\n  \tvar tdRedirectionClass = \"\";\n  \tvar RedirectionContent = \"\";\n  \tvar sameRedirectionsWithOrWithoutSGTIN = true;\n  \tif (this.state.updateRedirWithoutSGTINInProgress) {\n  \t\ttdRedirectionClass = \"updating\";\n  \t}\n  \tif (typeof this.state.redirects !== \"undefined\"\n  \t\t\t&& typeof this.state.redirects.redirectWithoutSGTIN.redirect !== \"undefined\" \n  \t\t\t&& typeof this.state.redirects.redirectWithSGTIN.redirect !== \"undefined\") {\n  \t\t\n\n\n  \t\tsameRedirectionsWithOrWithoutSGTIN = this.redirectionsWithSGTINisTheSameAsWithoutSGTIN();\n\n\t  \tif (this.state.redirects.redirectWithoutSGTIN.msg === RedirectionError) {\n\t  \t\ttdRedirectionClass = \"errorCell\";\n\t  \t\tRedirectionContent = RedirectionError;\n\t\t\t} else {\n\t\t\t\tRedirectionContent = this.state.redirects.redirectWithoutSGTIN.msg;\n\t\t\t\tif (this.state.redirects.redirectWithoutSGTIN.isRolex) {\n\t\t\t\t\tRedirectionContent += \" - \"  + RolexExperienceMessage;\n\t\t\t\t}\n\t\t\t}\n\t  \tif (!sameRedirectionsWithOrWithoutSGTIN) {\n\t  \t\ttdRedirectionClass = \"warningCell\";\n\t  \t\tRedirectionContent = \"Without SGTIN: \"+ RedirectionContent+\"<br/>With SGTIN:\" + this.state.redirects.redirectWithSGTIN.msg;\n\t  \t\tif (this.state.redirects.redirectWithSGTIN.isRolex) {\n\t  \t\t\tRedirectionContent += \" - \"  + RolexExperienceMessage;\n\t  \t\t}\n\t  \t}\n  \t}\n\n  \t// Filter\n  \tif ('redirectFilter' in this.props\n  \t\t\t&& this.props.redirectFilter.length > 0 \n  \t\t\t&& (RedirectionContent.length < 1 || !RedirectionContent.toLowerCase().includes(this.props.redirectFilter.toLowerCase()))) {\n  \t\treturn '';\n  \t}\n\n  \tvar TDs = [];\n  \tvar countTD = 0;\n  \tvar value;\n\t\tvar editLink = \"\";\n  \tif (this.props && 'columnsFilters' in this.props) {\n\t\t\tfor (var column in this.props.columnsFilters) {\n\t  \t\tif (this.props.columnsFilters[column].isVisible) {\n\t  \t\t\tvalue = '';\n\t  \t\t\teditLink = '';\n\t  \t\t\t// console.log(\"column\", column, this.props[column]);\n\t  \t\t\tif (column in this.props) {\n\t  \t\t\t\tvalue = this.props[column];\n\t  \t\t\t}\n\t  \t\t\tif (column === \"comment\" && this.state.comment) {\n\t  \t\t\t\tvalue = this.state.comment;\n\t  \t\t\t}\n\t  \t\t\tif (column === \"comment\" && !this.state.editMode) {\n\t  \t\t\t\tvalue = value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n\t  \t\t\t}\n\n\t  \t\t\t// if it is the 1st cell, we display here the edit button\n\t  \t\t\tif (this.props.isadmin && countTD === 0 && this.state && this.state.isSelected) {\n\t  \t\t\t\teditLink = <Link to={\"/isadmin/update/\" + this.props.uuid} className=\"edit badge badge-warning\" target=\"_blank\">Edit</Link>\n\t  \t\t\t}\n\t  \t\t\tcountTD++;\n\t  \t\t\tif (column === \"comment\" && this.state.editMode) {\n\t  \t\t\t\tTDs.push(<td key={column} onClick={this.setEditMode}>\n\t\t  \t\t\t\t<textarea name=\"comment\" id=\"comment\" className=\"form-control\" onChange={this.onChangeComment} defaultValue={value} rows=\"3\"></textarea>\n\t\t  \t\t\t\t<button onClick={this.cancelEditMode} className=\"badge badge-warning comment\">Cancel</button>\n\t\t  \t\t\t\t<button onClick={this.validateComment} className=\"badge badge-success comment\">Submit</button>\n  \t\t\t\t\t</td>);\n\t  \t\t\t} else if (column === \"comment\") {\n\t  \t\t\t\tTDs.push(<td key={column} onClick={this.setEditMode} dangerouslySetInnerHTML={{__html: value}}></td>);\n\t  \t\t\t} else {\n\t  \t\t\t\tTDs.push(<td key={column} >{editLink}{value}</td>);\n\t  \t\t\t}\n\t  \t\t}\n\t\t\t}\n\t\t}\n  \treturn (\n  \t\t<tr onClick={() => this.setActiveDomain()} >\n  \t\t\t{TDs}\n  \t\t\t<td className={tdCnameClass} dangerouslySetInnerHTML={{__html: DNSContent}}></td>\n  \t\t\t<td className={tdSSLClass}>{SSLContent}</td>\n  \t\t\t<td className={tdRedirectionClass} dangerouslySetInnerHTML={{__html: RedirectionContent}}>\n  \t\t\t</td>\n  \t\t</tr>\n\t\t);\n  }\n\n}\n\nexport default URL;\n","export default __webpack_public_path__ + \"static/media/Rolex_URL_working_copy.3ac17c38.csv\";","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Papa from 'papaparse';\nimport URL from './URL';\n// import CSV from \"../data/urls.csv\";\nimport CSV from \"../data/Rolex_URL_working_copy.csv\";\nimport cnameMapping from \"../data/cname_mapping.json\";\nimport Helper from \"./Helper\";\nimport DomainDataService from \"../admin/services/domain.service\";\n\nconst fetch = require('node-fetch');\n\n\nclass URLList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    //  this.state.urls[0] = {'domain': \"https://qru.aptamilessensis.com\", \"update\": false};\n    //  this.state.urls[1] = {'domain': \"https://qr.aptaclub.de\", \"update\": false};\n    //  this.state.urls[2] = {'domain': \"https://qrG.aptaclub.de\", \"update\": false};\n    this.state = {\n     domainsToCnames: {}\n    };\n\n    this.handleCallback = this.handleCallback.bind(this);\n    this.state.loadingURLs = false;\n  }\n\n  handleCallback(childData) {\n    var domainsToCnames = { ...this.state.domainsToCnames, ...childData };\n\n    this.setState({\n      domainsToCnames: domainsToCnames\n    });\n  }\n\n  async getURLsFromCSV() {\n  \t// if (URLs && URLs.length > 0) {\n  \t// \treturn URLs;\n  \t// }\n  \tvar URLs = await this.readCSV();\n  \tfor (var i = 0; i < URLs.length; i++) {\n  \t\tURLs[i].update = false;\n  \t}\n\n    console.log(\"URLS\", URLs);\n\n    this.setState({\n    \turls: URLs\n    });\n  }\n\n  async readCSV() {\n  \treturn fetch(CSV)\n  \t  .then((response) => {\n  \t  \treturn response.text();\n  \t  })\n  \t  .then(text => {\n\t\t  \tvar results = Papa.parse(text, { header: true, skipEmptyLines: true }); // object with { data, errors, meta }\n  \t\t  var rows = results.data; // array of objects\n  \t\t  // console.log(\"Results, rows\", results, rows);\n  \t\t  return rows;\n  \t  });\n  }\n\n  async retrieveDomains() {\n    this.setState({\n      loadingURLs: true\n    });\n\n    await DomainDataService.getAll()\n      .then(response => {\n        var URLs = response.data.Items;\n        for (var i = 0; i < URLs.length; i++) {\n          URLs[i].update = false;\n        }\n\n        this.setState({\n          domains: URLs,\n          loadingURLs: false\n        });\n\n        this.orderDomains();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  \n  orderDomains() {\n    this.setState({\n      domains: this.state.domains.sort((a, b) => {\n        var brandcompare = a.brand.localeCompare(b.brand);\n        if (brandcompare !== 0) {\n          return brandcompare;\n        }\n        return a.environment.localeCompare(b.environment);\n      })\n    });\n  }\n\n  componentDidMount() {\n    // this.getURLsFromCSV();\n    this.retrieveDomains();\n  }\n\n  URLisFiltered(domain) {\n\n    var dns = Helper._removeDomainProtocol(domain.brand);\n    if (this.props.cnameFilter.length > 0 \n      && \n        (!(dns in this.state.domainsToCnames) || !(this.state.domainsToCnames[dns].toLowerCase().includes(this.props.cnameFilter.toLowerCase())))\n        ) {\n        return true;\n    }\n\n    for (var column in this.props.columnsFilters) {\n      if (this.props.columnsFilters[column].isVisible \n          && this.props.columnsFilters[column].filter && this.props.columnsFilters[column].filter.length > 0\n          && (!domain[column]\n              || !domain[column].toLowerCase().includes(this.props.columnsFilters[column].filter.toLowerCase())\n             )\n        ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n\n  \t// if (!this.state || !(\"urls\" in this.state) || this.state.urls.length < 1) {\n    if (this.state && this.state.loadingURLs) {\n      return (\n        <Row>\n          <Col sm={12}>\n            Loading the URLs ...\n          </Col>\n        </Row>\n      );\n    } \n    else if (!this.state || !(\"domains\" in this.state) || this.state.domains.length < 1) {\n  \t\treturn (\n  \t\t\t<Row>\n\t  \t\t\t<Col sm={4}>\n\t  \t\t\t\tNo URLs provided.\n\t  \t\t\t</Col>\n\t  \t\t</Row>\n  \t\t);\n  \t}\n\n    var redirectFilter = this.props.redirectFilter;\n    \n  \t// const listUrls = this.state.urls.map((domain) => {\n    const listUrls = this.state.domains.map((domain) => {\n      \n\n      var update = this.props.update;\n      var updateDNS = this.props.updateDNS;\n      var updateSSL = this.props.updateSSL;\n      var updateRedirection = this.props.updateRedirection;\n      var display = true;\n      if (this.URLisFiltered(domain)) {\n        update = false;\n        updateDNS = false;\n        updateSSL = false;\n        updateRedirection = false;\n        display = false;\n      }\n\n      domain.brand = domain.brand.trim();\n      \n  \t  return <URL \n                  key={domain.domain}\n                  uuid={domain.uuid}\n                  domain={domain.domain}\n                  brand={domain.brand}              // dynamic field\n                  environment={domain.environment}  // dynamic field\n                  live={domain.live}                // dynamic field\n                  comment={domain.comment}                // dynamic field\n                  updated={domain.updated}                // dynamic field\n                  redirectFilter={redirectFilter}\n                  cnameMapping={cnameMapping}\n                  update={update}\n                  updateDNS={updateDNS}\n                  updateSSL={updateSSL}\n                  updateRedirection={updateRedirection}\n                  display={display}\n                  parentCallback={this.handleCallback}\n                  columnsFilters={this.props.columnsFilters}\n                  isadmin={this.props.isadmin}\n\t\t  \t  \t\t/>\n  \t});\n\n  \treturn (\n  \t\t<tbody>\n\t     {listUrls}\n\t    </tbody>\n\n\t\t);\n  }\n}\n\nexport default URLList;\n","import React from \"react\";\nimport Form from 'react-bootstrap/Form';\n\nclass Column extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: this.props.defaultChecked,\n    };\n  }\n\n  toggleChange = () => {\n    this.setState({\n      isChecked: !this.state.isChecked,\n    });\n\n    this.props.onChange(this.props.columnName, !this.state.isChecked);\n  }\n\n  render() {\n  \treturn (\n      <Form.Check type='checkbox' id={this.props.columnName} label={this.props.columnName} defaultChecked={this.state.isChecked} onChange={this.toggleChange} />\n\t\t);\n  }\n}\n\nexport default Column;\n","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport URLList from './URLList';\nimport Container from 'react-bootstrap/Container';\nimport Helper from \"./Helper\";\nimport Column from \"./Column\";\n\nconst messageFilterNeedsToBeActive = \"Too many URLs to proceed, please use the filters below first. If too many requests are triggered at the same time, some results may be wrong.\";\n\nclass FilterableURLList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleURLsVerifications = this.handleURLsVerifications.bind(this);\n    this.handleFilterColumnChange = this.handleFilterColumnChange.bind(this);\n    this.handleFilterCnameChange = this.handleFilterCnameChange.bind(this);\n    this.handleFilterRedirectChange = this.handleFilterRedirectChange.bind(this);\n\n    this.handleDNSVerifications = this.handleDNSVerifications.bind(this);\n    this.handleSSLVerifications = this.handleSSLVerifications.bind(this);\n    this.handleRedirection = this.handleRedirection.bind(this);\n\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n  }\n\n  handleKeyPress(e) {\n  \tif (e.key === 'Enter') {\n  \t\te.preventDefault();\n  \t}\n  }\n\n  handleFilterColumnChange(e) {\n  \tvar columnName = e.target.placeholder;\n  \tvar columnDBName = Helper.getDBNameFromDisplayName(columnName);\n  \tvar columnsFilters = this.state.columnsFilters;\n  \tcolumnsFilters[columnDBName].filter = e.target.value;\n  \tthis.setState({\n  \t\tcolumnsFilters: columnsFilters\n  \t})\n  \tthis.setUpdateToFalse();\n  }\n\n  handleFilterCnameChange(e) {\n  \tthis.setState({\n  \t\tcname: e.target.value,\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  handleFilterRedirectChange(e) {\n  \tthis.setState({\n  \t\tredirectFilter: e.target.value,\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  handleColumnChange(columnDisplayName, isVisible) {\n  \tvar columnDBName = Helper.getDBNameFromDisplayName(columnDisplayName);\n  \tvar columnsFilters = this.state.columnsFilters;\n  \tcolumnsFilters[columnDBName] = {\n  \t\tisVisible: isVisible,\n  \t\tfilter: '',\n  \t\tdisplayName: columnDisplayName,\n  \t};\n  \tthis.setState({\n  \t\tcolumnsFilters: columnsFilters\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n  componentDidMount() {\n\n  \tvar columns = Helper.getColumnsNames();\n  \tvar columnsFilters = [];\n  \tfor (var i = 0; i < columns.length; i++) {\n  \t\tcolumnsFilters[columns[i].columnNameDB] = {\n\t  \t\tisVisible: Helper.isColumnAlwaysVisible(columns[i].columnNameDB),\n\t  \t\tfilter: '',\n\t  \t\tdisplayName: columns[i].columnNameToDisplay,\n\t  \t};\n  \t}\n  \tthis.setState({\n  \t\tcolumnsFilters: columnsFilters,\n  \t\tsite: '',\n  \t\tenvironment: '',\n  \t\tdomain: '',\n  \t\tcname: '',\n  \t\tmsg: '',\n  \t});\n  \tthis.setUpdateToFalse();\n  }\n\n\tcomponentDidUpdate() {\n\t\t// console.log(\"update\", this.props);\t\n\t}\n\n  isFilterActive() {\n  \tfor (var column in this.state.columnsFilters) {\n  \t\tif (this.state.columnsFilters[column].isVisible \n  \t\t\t\t&& this.state.columnsFilters[column].filter \n  \t\t\t\t&& this.state.columnsFilters[column].filter.length > 0) {\n  \t\t\treturn true;\n  \t\t}\n  \t}\n  \treturn false;\n  }\n\n  setUpdateToFalse() {\n  \tthis.setState({\n  \t\tupdate: false,\n  \t\tupdateDNS: false,\n  \t\tupdateSSL: false,\n  \t\tupdateRedirection: false,\n  \t});\n  }\n\n  handleURLsVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdate: true\n  \t});\n  }\n  handleDNSVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateDNS: true\n  \t});\n  }\n  handleSSLVerifications() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateSSL: true\n  \t});\n  }\n  handleRedirection() {\n  \tif (!this.isFilterActive()) {\n  \t\tthis.setState({\n  \t\t\tmsg: messageFilterNeedsToBeActive\n  \t\t});\n  \t\treturn;\n  \t}\n  \tthis.setState({\n  \t\tupdateRedirection: true\n  \t});\n  }\n\n  render() {\n  \tvar cnameFilter = '';\n  \tif (this.state != null && 'cname' in this.state) {\n  \t\tcnameFilter = this.state.cname;\n  \t}\n  \tvar redirectFilter = '';\n  \tif (this.state != null && 'redirectFilter' in this.state) {\n  \t\tredirectFilter = this.state.redirectFilter;\n  \t}\n  \tvar update = false;\n  \tif (this.state != null && 'update' in this.state) {\n  \t\tupdate = this.state.update;\n  \t}\n  \tvar updateDNS = false;\n  \tif (this.state != null && 'updateDNS' in this.state) {\n  \t\tupdateDNS = this.state.updateDNS;\n  \t}\n  \tvar updateSSL = false;\n  \tif (this.state != null && 'updateSSL' in this.state) {\n  \t\tupdateSSL = this.state.updateSSL;\n  \t}\n  \tvar updateRedirection = false;\n  \tif (this.state != null && 'updateRedirection' in this.state) {\n  \t\tupdateRedirection = this.state.updateRedirection;\n  \t}\n\n  \tvar checkboxes = [];\n  \tvar header1 = [];\n  \tvar header2 = [];\n  \tvar header3 = [];\n  \tvar columnsFilters = [];\n  \tif (this.state && 'columnsFilters' in this.state) {\n  \t\tcolumnsFilters = this.state.columnsFilters;\n\n  \t\tfor (var column in this.state.columnsFilters) {\n  \t\t\tvar isVisible = this.state.columnsFilters[column].isVisible;\n\t  \t\tif (isVisible) {\n\t  \t\t\theader1.push(<td key={column}></td>);\n\t  \t\t\theader2.push(<td key={column}>{this.state.columnsFilters[column].displayName}</td>);\n\t  \t\t\theader3.push(<td key={column}><Form>\n\t\t  \t  \t\t    \t\t\t<Form.Control size=\"sm\" type=\"text\" placeholder={this.state.columnsFilters[column].displayName} value={this.state.columnsFilters[column].filter} onChange={this.handleFilterColumnChange} onKeyPress={this.handleKeyPress} />\n\t\t  \t  \t\t  \t\t\t</Form></td>);\n\t  \t\t} \n\t\t\t\tcheckboxes.push(<Column key={column} columnName={this.state.columnsFilters[column].displayName} onChange={this.handleColumnChange} defaultChecked={isVisible} />);\n  \t\t}\n  \t}\n\n  \treturn (\n  \t\t<Container fluid>\n\n\t    \t\t<Col sm={9}>\n\t  \t  \t\t<Button variant=\"outline-warning\" onClick={this.handleURLsVerifications} className=\"mt-2 mb-2 main\" >Test all</Button>\n\t    \t\t</Col>\n  \t\t<Row>\n    \t\t<Col sm={9}>\n    \t\t\t<Form>\n    \t\t\t\t{checkboxes}\n\t\t\t\t\t</Form>\n    \t\t</Col>\n  \t\t</Row>\n  \t\t<Row>\n\n\t  \t\t{this.state && this.state.msg && this.state.msg.length > 0 &&\n\t  \t\t\t<Alert variant=\"danger\" >{this.state.msg}</Alert>\n\t  \t\t}\n\n\t  \t\t<Col sm={12} >\n\t  \t\t\t<Table striped bordered hover responsive size=\"sm\" className=\"stubLinks\">\n\t\t  \t\t  <thead>\n\t\t  \t\t  <tr>\n\t\t\t\t  \t\t{header1}\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleDNSVerifications} >Test</Button>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleSSLVerifications} >Test</Button>\n\t\t\t\t  \t\t</td>\n\t\t\t  \t\t  <td>\n\t\t\t\t\t  \t\t<Button variant=\"outline-info\" onClick={this.handleRedirection} >Test</Button>\n\t\t\t\t  \t\t</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  <tr>\n\t\t\t\t  \t\t{header2}\n\t\t\t  \t\t  <td>DNS</td>\n\t\t\t  \t\t  <td>SSL validity</td>\n\t\t\t  \t\t  <td>Redirect</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  <tr>\n\t\t\t\t  \t\t{header3}\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"DNS & server\" value={cnameFilter} onChange={this.handleFilterCnameChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t  \t\t  </td>\n\t\t\t  \t\t  <td>\n\t\t\t\t  \t\t</td>\n\t\t\t  \t\t  <td>\n  \t\t  \t  \t\t<Form>\n  \t\t    \t\t    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Redirect\" value={redirectFilter} onChange={this.handleFilterRedirectChange} onKeyPress={this.handleKeyPress} />\n  \t\t    \t\t  </Form>\n\t\t\t\t  \t\t</td>\n\t\t  \t\t  </tr>\n\t\t  \t\t  </thead>\n\t\t\t  \t\t\t<URLList cnameFilter={cnameFilter} redirectFilter={redirectFilter} update={update} updateDNS={updateDNS} updateSSL={updateSSL} updateRedirection={updateRedirection} columnsFilters={columnsFilters} isadmin={this.props.isadmin} />\n\t\t  \t\t</Table>\n\t  \t\t</Col>\n  \t\t</Row>\n  \t\t</Container>\n\t\t);\n  }\n}\n\nexport default FilterableURLList;\n","import React from \"react\";\nimport { Navbar, Nav} from 'react-bootstrap';\n\nimport { Link} from 'react-router-dom'\nimport { useLocation } from \"react-router-dom\";\nimport Helper from \"./Helper\";\n\nconst Header = () => {\n    //assigning location variable\n    const location = useLocation();\n    var isAdmin = false;\n    if (Helper.isAdmin(location)) {\n      isAdmin = true;\n      console.log(\"isAdmin\");\n    }\n\n            // <Nav.Link as={Link} className=\"link\" to=\"/isadmin\">Admin</Nav.Link>\n    return (\n      <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\">\n        <Navbar.Brand as={Link} to='/'>Rolex - URLs verification tool</Navbar.Brand>\n        <Navbar.Collapse>\n          <Nav>\n            {isAdmin &&\n              <>\n              <Nav.Link as={Link} className=\"link\" to=\"/isadmin\">Admin</Nav.Link>\n              <Nav.Link as={Link} className=\"link\" to=\"/isadmin/add\">Add</Nav.Link>\n              </>\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport DomainDataService from \"../services/domain.service\";\nimport Helper from \"../../components/Helper\";\nconst isValidDomain = require('is-valid-domain');\n\n//TODO : make comment a textarea\n// Merge the update & add\n// change the design a bit \n\nexport default class AddDomain extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeDomain = this.onChangeDomain.bind(this);\n    this.onChangeBrand = this.onChangeBrand.bind(this);\n    this.onChangeEnvironment = this.onChangeEnvironment.bind(this);\n    this.onChangeLive = this.onChangeLive.bind(this);\n    this.onChangeComment = this.onChangeComment.bind(this);\n    this.createNewDomain = this.createNewDomain.bind(this);\n    this.updateDomain = this.updateDomain.bind(this);\n    this.deleteDomain = this.deleteDomain.bind(this);\n    this.newDomain = this.newDomain.bind(this);\n\n    this.state = {\n      currentDomain: {\n        uuid: null,\n        domain: \"\",\n        brand: \"\",\n        environment: \"RC\",\n        live: \"N\",\n        comment: \"\"\n      },\n      validationMsg: \"\",\n      submitted: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.id) {\n      console.log(\"update page\");\n      this.setState({\n        validationMsg: \"\",\n        submitted: false,\n        isNew: false\n      });\n      this.loadDomain(this.props.match.params.id);\n    } else {\n      console.log(\"creation page\");\n      this.newDomain();\n    }\n  }\n\n  newDomain() {\n    this.setState({\n      currentDomain: {\n        uuid: null,\n        domain: \"\",\n        brand: \"\",\n        environment: \"RC\",\n        live: \"N\",\n        comment: \"\",\n      },\n\n      validationMsg: \"\",\n      submitted: false,\n      isNew: true\n    });\n  }\n\n  loadDomain(id) {\n    DomainDataService.get(id)\n      .then(response => {\n          this.setState({\n            currentDomain: response.data.Item\n          });\n        console.log(\"Getting item\", response.data.Item);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  validateAndCleanDomain(URL) {\n    // Check the domain is not empty\n    if (!URL) {\n      throw new Error(\"The domain should not be empty.\");\n    }\n\n    // clean the domain\n    URL = URL.toLowerCase();\n    URL = URL.trim();\n    \n    // remove trailing slash\n    URL = URL.replace(/\\/$/, \"\");\n\n    // check for https\n    if (!URL.startsWith(\"https://\")) {\n      throw new Error(\"[\"+URL+\"] should start with \\\"https://\\\".\");\n    }\n\n    // check if DNS is correct\n    var domain = URL.replace(\"https://\", \"\");\n    if (!isValidDomain(domain)) {\n      throw new Error(\"[\"+domain+\"] is not a valid domain name.\");\n    }\n\n    return URL;\n  }\n\n  validateBrand(brand) {\n    // Check the brand exists\n    if (!brand) {\n      throw new Error(\"The brand should not be empty.\");\n    }\n  }\n\n  validateAndCleanData() {\n    var URL = this.state.currentDomain.domain;\n\n    try {\n      URL = this.validateAndCleanDomain(URL);\n      this.validateBrand(this.state.currentDomain.brand);\n      \n      // Check the domain that the domain doesn't already exist in the DB\n      //TODO\n\n    } catch(e) {\n      console.log(e.message);\n      this.setState({\n        validationMsg: e.message\n      });\n      return null;\n    }\n\n    this.setState({\n      validationMsg: \"\"\n    });\n\n    var data = {\n      uuid: this.state.currentDomain.uuid ? this.state.currentDomain.uuid : Helper._randomstring(12),\n      domain: URL,\n      brand: this.state.currentDomain.brand.trim(),\n      environment: this.state.currentDomain.environment,\n      live: this.state.currentDomain.live,\n      comment: this.state.currentDomain.comment ? this.state.currentDomain.comment.trim() : \"\",\n    };\n\n    return data;\n  }\n\n  createNewDomain() {\n    var data = this.validateAndCleanData();\n    if (!data) {\n      console.log(\"No data - not creating anything\");\n      return;\n    }\n    console.log(\"Creating ...\", data);\n\n    DomainDataService.create(data)\n      .then(response => {\n        this.setState({\n          currentDomain: data,\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateDomain() {\n    var data = this.validateAndCleanData();\n    if (!data) {\n      console.log(\"No data - not creating anything\");\n      return;\n    }\n\n    console.log(\"Updating\", data, data.uuid);\n    DomainDataService.update(\n      data.uuid,\n      data\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          submitted: true,\n          message: \"The domain was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteDomain() {\n    console.log(\"Deleting domain\", this.state.currentDomain, this.state.currentDomain.uuid);\n    DomainDataService.delete(this.state.currentDomain.uuid)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/isadmin')\n        // this.setState({\n        //   message: \"The domain was deleted successfully!\"\n        // });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  onChangeDomain(e) {\n    var currentDomain = this.state.currentDomain;\n    currentDomain.domain = e.target.value;\n    this.setState({\n      currentDomain: currentDomain\n    });\n  }\n  onChangeBrand(e) {\n    var currentDomain = this.state.currentDomain;\n    currentDomain.brand = e.target.value;\n    this.setState({\n      currentDomain: currentDomain\n    });\n  }\n  onChangeEnvironment(e) {\n    var currentDomain = this.state.currentDomain;\n    currentDomain.environment = e.target.value;\n    this.setState({\n      currentDomain: currentDomain\n    });\n  }\n  onChangeLive(e) {\n    var currentDomain = this.state.currentDomain;\n    currentDomain.live = e.target.value;\n    this.setState({\n      currentDomain: currentDomain\n    });\n  }\n  onChangeComment(e) {\n    var currentDomain = this.state.currentDomain;\n    currentDomain.comment = e.target.value;\n    this.setState({\n      currentDomain: currentDomain\n    });\n  }\n\n  render() {\n    const { currentDomain } = this.state;\n\n    return (\n      <div className=\"submit-form\">\n\n        {/* Validation */}\n        {this.state && this.state.validationMsg && \n          <div className=\"alert alert-danger\">{this.state.validationMsg}</div>\n        }\n\n        {/* Update: domain not found */}\n        {this.state && !this.state.isNew && (!currentDomain || !currentDomain.uuid) &&\n          <div className=\"alert alert-primary\"><b>The domain has not been found.</b></div>\n        }\n\n        {/* Creation ok */}\n        {this.state && this.state.isNew && this.state.submitted &&\n          <div>\n            <div className=\"alert alert-success\">The domain <b>\"{currentDomain.domain}\"</b> has been successfully created!</div>\n            <button className=\"btn btn-success\" onClick={this.newDomain}>\n              Add another\n            </button>\n          </div>\n        }\n\n        {/* Update ok */}\n        {this.state && !this.state.isNew && this.state.submitted &&\n          <div>\n            <div className=\"alert alert-success\">The domain <b>{currentDomain.domain}</b> has been successfully updated!</div>\n          </div>\n        }\n\n        {/* Display the form */}\n        {this.state && currentDomain && (!this.state.isNew || (this.state.isNew && !this.state.submitted)) &&\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"domain\">Domain</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"domain\"\n                required\n                defaultValue={currentDomain.domain}\n                onChange={this.onChangeDomain}\n                name=\"domain\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"brand\">Brand</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"brand\"\n                required\n                defaultValue={currentDomain.brand}\n                onChange={this.onChangeBrand}\n                name=\"brand\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"environment\">Environment</label>\n              <select \n                className=\"custom-select\" \n                id=\"environment\"\n                required\n                onChange={this.onChangeEnvironment}\n                name=\"environment\"\n                value={currentDomain.environment}\n                >\n                {Helper.getEnvironmentList().map((option) => (\n                  <option value={option}>{option}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"live\">Live</label>\n              <select \n                className=\"custom-select\" \n                id=\"live\"\n                required\n                onChange={this.onChangeLive}\n                name=\"live\"\n                value={currentDomain.live}\n                >\n                  <option value=\"N\">N</option>\n                  <option value=\"Y\">Y</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"comment\">Comment</label>\n              <textarea name=\"comment\" id=\"comment\" className=\"form-control\" onChange={this.onChangeComment} defaultValue={currentDomain.comment} rows=\"6\">\n              </textarea>\n            </div>\n\n            {/* Creation validation button */}\n            {this.state && this.state.isNew && !this.state.submitted &&\n              <button onClick={this.createNewDomain} className=\"btn btn-success\">\n                Submit\n              </button>\n            }\n\n            {/* Update validation button */}\n            {this.state && !this.state.isNew &&\n              <>\n              <div className=\"deletebutton\" >\n                <button\n                  className=\"badge badge-danger mr-2\"\n                  onClick={this.deleteDomain}\n                >\n                  Delete\n                </button>\n              </div>\n              <div className=\"validatebutton\" >\n                <button\n                  type=\"submit\"\n                  className=\"badge badge-success\"\n                  onClick={this.updateDomain}\n                >\n                  Update\n                </button>\n              </div>\n              </>\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/bootstrap_darky.min.css';\nimport './css/rolex_url.css';\n\nimport Container from 'react-bootstrap/Container';\nimport FilterableURLList from './components/FilterableURLList';\nimport Header from './components/Header';\nimport AddDomain from \"./admin/components/add-domain.component\";\nimport \"./admin/App.css\";\n\nfunction App() {\n\n  // trim spaces when copying a text \n  React.useEffect(() => {\n    window.addEventListener('copy', function(e) {\n      const text_only = document.getSelection().toString().trim();\n      const clipdata = e.clipboardData || window.clipboardData;  \n      clipdata.setData('text/plain', text_only);\n      clipdata.setData('text/html', text_only);\n      e.preventDefault();\n    });\n  }, []);\n\n  const rolexURL = \n    <Container fluid>\n\n      <BrowserRouter>\n        <Header />\n        <Switch>\n            <Route exact path=\"/\" >\n              <FilterableURLList isadmin={false} />\n            </Route>\n            <Route exact path=\"/isadmin\" >\n              <FilterableURLList isadmin={true} />\n            </Route>\n            <Route exact path=\"/isadmin/add\" component={AddDomain} />\n            <Route path=\"/isadmin/update/:id\" component={AddDomain} />\n        </Switch>\n      </BrowserRouter>\n\n    </Container>\n  ;\n  return ReactDOM.render(rolexURL, document.getElementById('root'));\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}